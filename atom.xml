<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>超元气Zeroの札记</title>
  <icon>https://www.gravatar.com/avatar/6f2cdb2237458c9d449c99b722c0099d</icon>
  <subtitle>一个集美貌与才华于一身的程序媛</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liuchao0704.github.io/"/>
  <updated>2018-03-17T05:59:48.042Z</updated>
  <id>https://liuchao0704.github.io/</id>
  
  <author>
    <name>超元气Zero</name>
    <email>2820501417@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人简历</title>
    <link href="https://liuchao0704.github.io/2018/03/01/resume/"/>
    <id>https://liuchao0704.github.io/2018/03/01/resume/</id>
    <published>2018-03-01T13:45:43.000Z</published>
    <updated>2018-03-17T05:59:48.042Z</updated>
    
    <content type="html"><![CDATA[<p> 主要记录自己在乐伏做过的项目</p><a id="more"></a> <table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">姓名</td><td style="text-align:center">刘超</td><td style="text-align:center">性别</td><td style="text-align:center">程序媛</td></tr><tr><td style="text-align:center">学历</td><td style="text-align:center">本科</td><td style="text-align:center">专业</td><td style="text-align:center">电子信息工程</td></tr><tr><td style="text-align:center">邮箱</td><td style="text-align:center"><a href="mailto:2820501417@qq.com" target="_blank" rel="noopener">2820501417@qq.com</a></td><td style="text-align:center">个人博客</td><td style="text-align:center"><a href="https://liuchao0704.github.io/">https://liuchao0704.github.io/</a></td></tr></tbody></table><p>无锡乐伏网络科技有限公司是中国领先的光伏能源设备监控与运维解决方案提供商。有幸在公司成立之初就加入，从初代产品研发到后续产品的不断迭代，从PC端到移动端，产品线逐渐丰富的同时，客户体验也日臻完善。在项目开发中我经历了不断创新、不断思考和总结。</p><h4 id="移动端-乐伏管家app"><a href="#移动端-乐伏管家app" class="headerlink" title="[移动端] 乐伏管家app"></a>[移动端] 乐伏管家app</h4><h4 id="2017-12-2018-3"><a href="#2017-12-2018-3" class="headerlink" title="2017.12-2018.3"></a>2017.12-2018.3</h4><h4 id="angular-1-x-android-ios"><a href="#angular-1-x-android-ios" class="headerlink" title="angular 1.x +android / ios"></a>angular 1.x +android / ios</h4><p>乐伏管家app是我独立做的第三个app，这是一个将监控app和运维app重新整合的app。针对老版本的app操作以及数据显示方面等问题。我和产品经理做了全新的界面设计。亮点如下</p><ul><li>全新的个性化界面设置 根据电站的天气情况，首页新增晴天/阴天/多云/雨/雪/夜间模式并动态更新页面，带来不一样的视觉体验</li><li>使用better-srcoll插件为移动端带来更流畅的滑屏体验 （主要应用于超长页面 和 下拉加载数据）</li></ul><p>视觉层面做了不少优化目的是更加接近原生app。在看不见的地方，数据存储以及管理方面我也做了优化。angular 1.x没有类似vuex 数据管理。我利用angular 1.x 的<code>$rootscope</code>作为简易版本的数据管理，在<code>$rootscope</code>创建对象存储多次复用并且需要实时更新的数据。</p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/%E4%B9%90%E4%BC%8F%E7%AE%A1%E5%AE%B6%E5%90%881.jpg" alt=""><br><img src="http://okn6xxp76.bkt.clouddn.com/resume/%E4%B9%90%E4%BC%8F%E7%AE%A1%E5%AE%B6%E5%90%882.jpg" alt=""></p><h4 id="移动端-乐伏运维app"><a href="#移动端-乐伏运维app" class="headerlink" title="[移动端] 乐伏运维app"></a>[移动端] 乐伏运维app</h4><h4 id="2017-8-2017-9"><a href="#2017-8-2017-9" class="headerlink" title="2017.8-2017.9"></a>2017.8-2017.9</h4><h4 id="angular-1-x-android-ios-1"><a href="#angular-1-x-android-ios-1" class="headerlink" title="angular 1.x +android / ios"></a>angular 1.x +android / ios</h4><p>乐伏运维app是运行在移动端的电站运维系统，目的方便终端用户及时上报告警记录，运维人员及时接单运维。针对第一版的乐伏监控app 的一些问题。我决定将此app做成webApp。angular1.x框架满足了app的路由切换和多角色分配。数据双向绑定也为app开发带来了便利，此app基本沿用PC端的开发思路。</p><ul><li>采用ajax与后台交互数据</li><li>版本合一 android 和 ios 使用一个版本 不需要维护多版本</li><li>路由切换更加自然 更接近原生app</li></ul><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/%E4%B9%90%E4%BC%8F%E8%BF%90%E7%BB%B4app%E5%90%88.jpg" alt=""></p><h4 id="PC端-乐伏运维系统"><a href="#PC端-乐伏运维系统" class="headerlink" title="[PC端]乐伏运维系统"></a>[PC端]乐伏运维系统</h4><h4 id="2017-6-2017-7"><a href="#2017-6-2017-7" class="headerlink" title="2017.6 - 2017.7"></a>2017.6 - 2017.7</h4><h4 id="angular-1-x-bootstrap-windows"><a href="#angular-1-x-bootstrap-windows" class="headerlink" title="angular 1.x + bootstrap + windows"></a>angular 1.x + bootstrap + windows</h4><p>乐伏电站运维平台是基于对用户需求分析，以及目前市场上电站运维存在的一些问题而开发出来的。从我国光伏产业分布来看光伏产业的发展，随着光伏政策，地域经济等多方面的影响，由原来的大型地面的集中式光伏电站， 逐渐转移到分布式光伏电站，而光伏电站运维就直接决定了投资者的收益率，乐伏运维平台将投资者和集成商紧密的联系到一起。便于及时解决电站的故障及其他问题。</p><ul><li>不同用户角色不同权限的页面展示</li><li>集成简易的物料管理系统</li><li>运单不同状态下的可操作流程、功能</li></ul><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/P%25LH@1EVQR_NTPA$@14DO$H.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/3W14R%7D081LVN_41G8~KVI5Y.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/534@%60V8556CBTWM%7DQHN%601NT.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/H$%60WG%5BOD4WTN$7G%7B78%29P~1I.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/W%29CZLRG%5B%5B%7BW%7B$26JVN15833.jpg" alt=""></p><h4 id="PC端-乐伏电站设计系统"><a href="#PC端-乐伏电站设计系统" class="headerlink" title="[PC端] 乐伏电站设计系统"></a>[PC端] 乐伏电站设计系统</h4><h4 id="2017-3-2017-4"><a href="#2017-3-2017-4" class="headerlink" title="2017.3 - 2017.4"></a>2017.3 - 2017.4</h4><h4 id="angular-1-x-bootstrap-windows-1"><a href="#angular-1-x-bootstrap-windows-1" class="headerlink" title="angular 1.x + bootstrap + windows"></a>angular 1.x + bootstrap + windows</h4><p>乐伏电站设计系统是一个实用的电站设计平台，方便用户进行电站预估计算及设备选型。用户不需要专业，系统会帮助用户进行一键式计算和选型匹配，使电站获得最佳的收益。</p><ul><li>高德地图支持用户快速自定义电站位置 </li><li>获取该地理位置的辐照量和最佳倾斜角</li><li>用户自定义组件方案设计</li><li>打印自定义方案</li></ul><p>angularJS 负责数据部分</p><ul><li>$broadcast 父级向子级广播事件控制路由跳转防止未保存当前步骤就跳转下一步</li><li>$watch 监听更新数据实时更新用户自定义设计方案并评估</li><li>bootstrap ui- carousel 循环输出用户的设计方案报告</li></ul><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/%5B5C5%29H%7BD$%5BP@XXQ%29%28SFJ%5D%7B6.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/NB8%60O5%5BF4K1_S%5DL%7DXHKR20A.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/I7%25D~7@KS3U89~C54UDYXH4.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/BH~%25J%5B7DH%5B%7DDXE%28@K$G4%7D8S.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/Y%25B9@QO_$7V$9N%28P%7DBLF6ZB.jpg" alt=""></p><h4 id="移动端-乐伏监控app"><a href="#移动端-乐伏监控app" class="headerlink" title="[移动端] 乐伏监控app"></a>[移动端] 乐伏监控app</h4><h4 id="2017-1-2017-2"><a href="#2017-1-2017-2" class="headerlink" title="2017.1-2017.2"></a>2017.1-2017.2</h4><h4 id="jquery-css-android-ios"><a href="#jquery-css-android-ios" class="headerlink" title="jquery + css +android / ios"></a>jquery + css +android / ios</h4><p>乐伏监控app是运行在移动端的电站监控程序</p><ul><li>简单的页面切换</li><li>保留提取PC端重要的电站/设备信息展示</li><li>jquery + 原生js做数据绑定和下拉加载数据</li><li>mobiscroll 移动端datepicker插件</li></ul><p>乐伏监控app也是我做的第一个app也遇到一些实际问题</p><ul><li>静态页面打包在客户端本地无法使用ajax获取数据 </li><li>rem适配页面会有一瞬间的缩小和放大</li></ul><p>针对以上问题我做个了总结<a href="https://liuchao0704.github.io/2017/07/07/angularApp/">angular1开发webApp</a></p><p>乐伏监控app当然也存在一些问题</p><ul><li>页面切换不够自然比较生硬（不是SPA无法做到路由切换只是单纯的html页面切换）</li><li>数据绑定方面例如电站列表使用原生js字符串拼接循环输出比较繁琐</li><li>版本不好维护 android 和 ios 和 web 一共三个版本 费时费力</li></ul><p>针对以上问题我在做第二个app 即运维app时候做了突破性改变<br><img src="http://okn6xxp76.bkt.clouddn.com/resume/%E4%B9%90%E4%BC%8F%E7%9B%91%E6%8E%A7%E5%90%88.jpg" alt=""></p><h4 id="PC端-乐伏电站监控系统"><a href="#PC端-乐伏电站监控系统" class="headerlink" title="[PC端]乐伏电站监控系统"></a>[PC端]乐伏电站监控系统</h4><h4 id="2016-11-2017-1"><a href="#2016-11-2017-1" class="headerlink" title="2016.11 - 2017.1"></a>2016.11 - 2017.1</h4><h4 id="angular-1-x-bootstrap-windows-2"><a href="#angular-1-x-bootstrap-windows-2" class="headerlink" title="angular 1.x + bootstrap + windows"></a>angular 1.x + bootstrap + windows</h4><p>乐伏监控系统主要的两大功能分为设备展示和设备绑定 。</p><h5 id="展示模块"><a href="#展示模块" class="headerlink" title="展示模块"></a>展示模块</h5><ul><li>电站/设备列表展示</li><li>电站/设备的状态、发电量、收益、效率、环保信息概览信息</li><li>电站/设备 发电量、功率 日/月/年/总/图表展示</li><li>电站/设备 告警、错误信息展示统计</li></ul><h5 id="添加模块"><a href="#添加模块" class="headerlink" title="添加模块"></a>添加模块</h5><ul><li>添加电站</li><li>添加设备</li></ul><p>angularJS 负责数据双向绑定</p><ul><li>ui-router + animate.css 负责SPA(单页面应用)路由切换以及切换效果</li><li>ng-repeat  列表的分页渲染</li><li>angular 内置form validate 配合正则表达式验证表单（用户注册/登录/电站个添加/设备添加）</li></ul><p>bootstrap datepicker + highchart  图表展示</p><ul><li>bootstrap datepicker 支持单日期的自由选择以及任意 时间段选择 </li><li>highchart插件中的柱状图、折线图、 饼状图 、仪表图等形式 为电站/设备发电量、功率等数据展示提供了直观的视觉效果。</li></ul><p>Bootstrap </p><ul><li>Boostrap 栅格系统快速搭建后台管理系统页面</li></ul><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/D%28~U1%5B%7BHJJJZX~%7B%607EIDIK8.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/3K3%29%60%60M%7D%7BUF3VE%29N%7BEG%60_C2.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/resume/%5B@K%29FUG52%25PND0VL%28%5B@6Z11.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 主要记录自己在乐伏做过的项目&lt;/p&gt;
    
    </summary>
    
    
      <category term="简历" scheme="https://liuchao0704.github.io/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>常用正则表达式整理</title>
    <link href="https://liuchao0704.github.io/2018/02/01/reg/"/>
    <id>https://liuchao0704.github.io/2018/02/01/reg/</id>
    <published>2018-02-01T13:45:43.000Z</published>
    <updated>2018-03-16T01:58:38.000Z</updated>
    
    <content type="html"><![CDATA[<p> 将常用的正则表达式整理如下。</p><a id="more"></a> <h1 id="常用正则表达式整理"><a href="#常用正则表达式整理" class="headerlink" title="常用正则表达式整理"></a>常用正则表达式整理</h1><h2 id="正则元字符"><a href="#正则元字符" class="headerlink" title="正则元字符"></a>正则元字符</h2><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>*</td><td>匹配前面的字表达式零次或者多次等价于{0,}</td></tr><tr><td>+</td><td>匹配前面的字表达式一次或者多次等价于{1,}</td></tr><tr><td>?</td><td>匹配前面的字表达式零次或者一次等价于{0,1}</td></tr></tbody></table><h2 id="整数-不限制正负"><a href="#整数-不限制正负" class="headerlink" title="整数(不限制正负)"></a>整数(不限制正负)</h2><pre><code>/^-?\d+$/; // 不限制长度</code></pre><h2 id="整数-gt-0"><a href="#整数-gt-0" class="headerlink" title="整数(&gt; 0)"></a>整数(&gt; 0)</h2><pre><code>/^[1-9]\d*$/; // 不限制长度/^[1-9]\d{0,5}$/;// 限制长度</code></pre><h2 id="整数-gt-0-amp-amp-lt-100"><a href="#整数-gt-0-amp-amp-lt-100" class="headerlink" title="整数(&gt; 0 &amp;&amp; &lt;= 100)"></a>整数(&gt; 0 &amp;&amp; &lt;= 100)</h2><pre><code>/^(100|([1-9]{1}\d?))$/</code></pre><p><img src="http://okn6xxp76.bkt.clouddn.com/image/reg/reg2.png" alt=""></p><h2 id="浮点型-gt-0-保留2位小数"><a href="#浮点型-gt-0-保留2位小数" class="headerlink" title="浮点型(&gt; 0 保留2位小数)"></a>浮点型(&gt; 0 保留2位小数)</h2><pre><code>/^(([1-9]{1})(\.\d{1,2})?|(0(\.\d{0,1}[1-9])))$/</code></pre><p><img src="http://okn6xxp76.bkt.clouddn.com/image/reg/reg0.png" alt=""></p><pre><code>/^(([1-9]{1}[0-9]{0,5})(\.\d{1,2})?|(0(\.\d{0,1}[1-9])))$/ </code></pre><h2 id="浮点型-gt-0-保留2位小数-1"><a href="#浮点型-gt-0-保留2位小数-1" class="headerlink" title="浮点型(&gt;= 0 保留2位小数)"></a>浮点型(&gt;= 0 保留2位小数)</h2><pre><code>/^(([1-9]{1})(\.\d{1,2})?|(0(\.\d{0,1}[1-9])?))$/</code></pre><p><img src="http://okn6xxp76.bkt.clouddn.com/image/reg/reg1.png" alt=""></p><h2 id="字符串开头不能空格-中间可以是空格-数字-字母-中文-非特殊字符结尾"><a href="#字符串开头不能空格-中间可以是空格-数字-字母-中文-非特殊字符结尾" class="headerlink" title="字符串开头不能空格 中间可以是空格/数字/字母/中文/非特殊字符结尾"></a>字符串开头不能空格 中间可以是空格/数字/字母/中文/非特殊字符结尾</h2><pre><code>/^[\w\u4e00-\u9fa5]{1}[\s\w\u4e00-\u9fa5]{0,8}$/</code></pre><p><img src="http://okn6xxp76.bkt.clouddn.com/image/reg/reg3.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 将常用的正则表达式整理如下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="reg" scheme="https://liuchao0704.github.io/tags/reg/"/>
    
  </entry>
  
  <entry>
    <title>学以致用系列之js array</title>
    <link href="https://liuchao0704.github.io/2018/01/28/jsArray/"/>
    <id>https://liuchao0704.github.io/2018/01/28/jsArray/</id>
    <published>2018-01-28T10:46:46.000Z</published>
    <updated>2018-01-29T14:51:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近学react,对于数据操作特别是数组的操作让我有了新的认识,现在将数组的一些方法记录下来,并且改造一下之前angular js checkbox全选和选不选的js。希望自己写出更加优雅的代码(少用if，else)。<br><a id="more"></a>  </p><h2 id="一行代码搞定Array的深拷贝"><a href="#一行代码搞定Array的深拷贝" class="headerlink" title="一行代码搞定Array的深拷贝"></a>一行代码搞定Array的深拷贝</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">var</span> <span class="class"><span class="keyword">data</span> = <span class="keyword">data</span>.conact(); // js contacat() 方法会返回一个新的数组。tips：原数组中如有对象,还是不能做到完全的深拷贝。</span></span><br></pre></td></tr></table></figure><h2 id="数组的过滤-filter"><a href="#数组的过滤-filter" class="headerlink" title="数组的过滤 filter()"></a>数组的过滤 filter()</h2><p>原来我操作的数组的思路是循环数组找到index,然后用数组的splice(index, 1)删除。其实就是filter()应该干的事情。</p><h2 id="改写Angular-JS动态控制多选框全选与全不选并且打印选中的值"><a href="#改写Angular-JS动态控制多选框全选与全不选并且打印选中的值" class="headerlink" title="改写Angular JS动态控制多选框全选与全不选并且打印选中的值]"></a>改写Angular JS动态控制多选框全选与全不选并且打印选中的值]</h2><p><a href="https://liuchao0704.github.io/2017/04/10/multiselect/">点击查看</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=<span class="string">"angular-1.3.0.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body ng-app="myApp" ng-controller="vipApplyEditCtrl"&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;div&gt;  </span></span><br><span class="line"><span class="regexp">     &lt;input </span></span><br><span class="line"><span class="regexp">          type="checkbox" </span></span><br><span class="line"><span class="regexp">          name="all" </span></span><br><span class="line"><span class="regexp">          ng-model="all"</span></span><br><span class="line"><span class="regexp">          ng-change="toSelectAll(all)"&gt; 全选 </span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;i&gt;&#123;&#123;all&#125;&#125;&lt;/i</span>&gt;</span><br><span class="line">    &lt;div ng-repeat=<span class="string">"color in colors"</span>&gt;  </span><br><span class="line">        &lt;input </span><br><span class="line">              type=<span class="string">"checkbox"</span> </span><br><span class="line">              ng-checked=<span class="string">"color.checked == true"</span>   </span><br><span class="line">              ng-click=<span class="string">"updateSelection(color)"</span> </span><br><span class="line">              /&gt;</span><br><span class="line">              &#123;&#123;color.name&#125;&#125;  </span><br><span class="line">    &lt;<span class="regexp">/div&gt;  </span></span><br><span class="line"><span class="regexp">    </span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    Selected :&#123;&#123;selected&#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;  </span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">var app = angular.module('myApp', []);</span></span><br><span class="line"><span class="regexp">app.controller("vipApplyEditCtrl", function($scope) &#123;  </span></span><br><span class="line"><span class="regexp">    $scope.formData = &#123;&#125;;</span></span><br><span class="line"><span class="regexp">    $scope.colors = [  </span></span><br><span class="line"><span class="regexp">        &#123;id : 1, name : 'black'&#125;,  </span></span><br><span class="line"><span class="regexp">        &#123;id : 2, name : 'red'&#125;,  </span></span><br><span class="line"><span class="regexp">        &#123;id : 3, name : 'blue'&#125;,  </span></span><br><span class="line"><span class="regexp">        &#123;id : 4, name : 'yellow'&#125;,  </span></span><br><span class="line"><span class="regexp">        &#123;id : 5, name : 'green'&#125;,  </span></span><br><span class="line"><span class="regexp">        &#123;id : 6, name : 'white'&#125;  </span></span><br><span class="line"><span class="regexp">    ] ;  </span></span><br><span class="line"><span class="regexp">      </span></span><br><span class="line"><span class="regexp">     $scope.selected = [] ;  /</span><span class="regexp">/ 存放新的已选数据 </span></span><br><span class="line"><span class="regexp">     $scope.updateSelection = function(obj)&#123;  </span></span><br><span class="line"><span class="regexp">        obj.checked = !obj.checked;</span></span><br><span class="line"><span class="regexp">        $scope.selected = [] ; </span></span><br><span class="line"><span class="regexp">         $scope.colors.forEach(function(item)&#123;</span></span><br><span class="line"><span class="regexp">            if(item.checked)&#123;</span></span><br><span class="line"><span class="regexp">                $scope.selected.push(item.id) ;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">         $scope.colors.every(function(item)&#123;</span></span><br><span class="line"><span class="regexp">            return item.checked ;</span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">    &#125;;</span></span><br><span class="line"><span class="regexp">     $scope.toSelectAll = function(flag)&#123;</span></span><br><span class="line"><span class="regexp">        $scope.selected = [];</span></span><br><span class="line"><span class="regexp">        $scope.colors.forEach(function(i)&#123;</span></span><br><span class="line"><span class="regexp">                 i.checked = flag;</span></span><br><span class="line"><span class="regexp">                 if(flag)$scope.selected.push(i.id);</span></span><br><span class="line"><span class="regexp">             &#125;)</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;);  </span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近学react,对于数据操作特别是数组的操作让我有了新的认识,现在将数组的一些方法记录下来,并且改造一下之前angular js checkbox全选和选不选的js。希望自己写出更加优雅的代码(少用if，else)。&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://liuchao0704.github.io/tags/js/"/>
    
      <category term="array" scheme="https://liuchao0704.github.io/tags/array/"/>
    
  </entry>
  
  <entry>
    <title>js 基本类型学习总结</title>
    <link href="https://liuchao0704.github.io/2017/12/31/js/"/>
    <id>https://liuchao0704.github.io/2017/12/31/js/</id>
    <published>2017-12-31T14:02:20.000Z</published>
    <updated>2018-01-17T11:51:34.000Z</updated>
    
    <content type="html"><![CDATA[<p> 看完js高级程序之后对js基本类型的学习和总结<br><a id="more"></a></p><h2 id="类型、值、变量"><a href="#类型、值、变量" class="headerlink" title="类型、值、变量"></a>类型、值、变量</h2><h4 id="JavaScript的数据类型分为类型：-基本类型（原始类型-和引用类型-对象类型"><a href="#JavaScript的数据类型分为类型：-基本类型（原始类型-和引用类型-对象类型" class="headerlink" title="JavaScript的数据类型分为类型： 基本类型（原始类型)和引用类型(对象类型)"></a>JavaScript的数据类型分为类型： 基本类型（原始类型)和引用类型(对象类型)</h4><ul><li><p>基本类型 Undefined、Null、Boolean、Number和String</p></li><li><p>引用类型 object</p></li></ul><h4 id="不可改变的原始值和可变的对象引用"><a href="#不可改变的原始值和可变的对象引用" class="headerlink" title="不可改变的原始值和可变的对象引用"></a>不可改变的原始值和可变的对象引用</h4><ul><li>原始值是不可更改的，任何方法都无法更改一个原始值。字符串中所有的方法看上去返回了一个修改后的字符串，实际上返回的是一个新的字符串值</li></ul><h2 id="typeof判断数据类型"><a href="#typeof判断数据类型" class="headerlink" title="typeof判断数据类型"></a>typeof判断数据类型</h2><p>typeof操作符返回一个<strong>字符串</strong>指示未经计算的操作数的类型。</p><table><thead><tr><th>类型</th><th>结果   </th></tr></thead><tbody><tr><td>Undefined</td><td>“undefined”    </td></tr><tr><td>Null</td><td>“object” (见下方)     </td></tr><tr><td>Boolean</td><td>“boolean”     </td></tr><tr><td>Number</td><td>“number”   </td></tr><tr><td>String</td><td>“string”</td></tr><tr><td>Symbol (ECMAScript 6 新增)</td><td>“symbol”   </td></tr><tr><td>宿主对象(由JS环境提供)</td><td>Implementation-dependent  </td></tr><tr><td>函数对象 ( [[Call]] 在ECMA-262条款中实现了)</td><td>“function”</td></tr><tr><td>任何其他对象</td><td>“object”</td></tr></tbody></table><h3 id="typeof实例"><a href="#typeof实例" class="headerlink" title="typeof实例"></a>typeof实例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Numbers</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">37</span> === <span class="string">'number'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="number">3.14</span> === <span class="string">'number'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Math</span>.LN2 === <span class="string">'number'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">Infinity</span> === <span class="string">'number'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">NaN</span> === <span class="string">'number'</span>; <span class="comment">// 尽管NaN是"Not-A-Number"的缩写</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Number</span>(<span class="number">1</span>) === <span class="string">'number'</span>; <span class="comment">// 但不要使用这种形式!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Strings</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="string">""</span> === <span class="string">'string'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="string">"bla"</span> === <span class="string">'string'</span>;</span><br><span class="line"><span class="keyword">typeof</span> (<span class="keyword">typeof</span> <span class="number">1</span>) === <span class="string">'string'</span>; <span class="comment">// typeof总是返回一个字符串</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">String</span>(<span class="string">"abc"</span>) === <span class="string">'string'</span>; <span class="comment">// 但不要使用这种形式!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Booleans</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">true</span> === <span class="string">'boolean'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">false</span> === <span class="string">'boolean'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Boolean</span>(<span class="literal">true</span>) === <span class="string">'boolean'</span>; <span class="comment">// 但不要使用这种形式!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Symbols</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Symbol</span>() === <span class="string">'symbol'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Symbol</span>(<span class="string">'foo'</span>) === <span class="string">'symbol'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Symbol</span>.iterator === <span class="string">'symbol'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Undefined</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span> === <span class="string">'undefined'</span>;</span><br><span class="line"><span class="keyword">typeof</span> declaredButUndefinedVariable === <span class="string">'undefined'</span>;</span><br><span class="line"><span class="keyword">typeof</span> undeclaredVariable === <span class="string">'undefined'</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Objects</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;<span class="attr">a</span>:<span class="number">1</span>&#125; === <span class="string">'object'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用Array.isArray 或者 Object.prototype.toString.call</span></span><br><span class="line"><span class="comment">// 区分数组,普通对象</span></span><br><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>] === <span class="string">'object'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Date</span>() === <span class="string">'object'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面的容易令人迷惑，不要使用！</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Boolean</span>(<span class="literal">true</span>) === <span class="string">'object'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1</span>) ==== <span class="string">'object'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"abc"</span>) === <span class="string">'object'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125; === <span class="string">'function'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;&#125; === <span class="string">'function'</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Math</span>.sin === <span class="string">'function'</span>;</span><br></pre></td></tr></table></figure><h2 id="Number类型"><a href="#Number类型" class="headerlink" title="Number类型"></a>Number类型</h2><h2 id="判断数组的几种方法"><a href="#判断数组的几种方法" class="headerlink" title="判断数组的几种方法"></a>判断数组的几种方法</h2><ul><li><p>typeof &amp;&amp; length</p></li><li><p>instanceof</p></li><li><p>isArray</p></li></ul><h3 id="typeof：数组有length属性，object没有"><a href="#typeof：数组有length属性，object没有" class="headerlink" title="typeof：数组有length属性，object没有"></a>typeof：数组有length属性，object没有</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123; <span class="string">'name'</span>:<span class="string">'lee'</span> &#125;; <span class="comment">// 对象</span></span><br><span class="line"><span class="keyword">var</span> a = [<span class="string">'reg'</span>,<span class="string">'blue'</span>]; <span class="comment">// 数组</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> getDataType = <span class="function"><span class="keyword">function</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> o == <span class="string">'object'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>( <span class="keyword">typeof</span> o.length == <span class="string">'number'</span> )&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'Array'</span>; </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'Object'</span>;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'param is no object type'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">alert( getDataType(o) );    <span class="comment">// Object</span></span><br><span class="line">alert( getDataType(a) );    <span class="comment">// Array</span></span><br><span class="line">alert( getDataType(<span class="number">1</span>) );    <span class="comment">// param is no object type</span></span><br><span class="line">alert( getDataType(<span class="literal">true</span>) ); <span class="comment">// param is no object type</span></span><br><span class="line">alert( getDataType(<span class="string">'a'</span>) );  <span class="comment">// param is no object type</span></span><br></pre></td></tr></table></figure><h3 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123; <span class="string">'name'</span>:<span class="string">'lee'</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> a = [<span class="string">'reg'</span>,<span class="string">'blue'</span>];</span><br><span class="line"> </span><br><span class="line">alert( a <span class="keyword">instanceof</span> <span class="built_in">Array</span> );  <span class="comment">// true</span></span><br><span class="line">alert( o <span class="keyword">instanceof</span> <span class="built_in">Array</span> );  <span class="comment">// false</span></span><br><span class="line">alert( a <span class="keyword">instanceof</span> <span class="built_in">Object</span> );  <span class="comment">// true</span></span><br><span class="line">alert( o <span class="keyword">instanceof</span> <span class="built_in">Object</span> );  <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="instanceof-多个iframe下"><a href="#instanceof-多个iframe下" class="headerlink" title="instanceof 多个iframe下"></a>instanceof 多个iframe下</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line">xArray = <span class="built_in">window</span>.frames[<span class="built_in">window</span>.frames.length<span class="number">-1</span>].Array;</span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> xArray(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>); <span class="comment">// [1,2,3]</span></span><br><span class="line"><span class="comment">// Correctly checking for Array</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(arr);  <span class="comment">// true</span></span><br><span class="line"><span class="comment">// Considered harmful, because doesn't work through iframes</span></span><br><span class="line">arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>; <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="Array-isArray-（IE9以及上支持）"><a href="#Array-isArray-（IE9以及上支持）" class="headerlink" title="Array.isArray() （IE9以及上支持）"></a>Array.isArray() （IE9以及上支持）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// all following calls return true</span></span><br><span class="line"><span class="built_in">Array</span>.isArray([]);</span><br><span class="line"><span class="built_in">Array</span>.isArray([<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Array</span>());</span><br><span class="line"><span class="comment">// Little known fact: Array.prototype itself is an array:</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="built_in">Array</span>.prototype); </span><br><span class="line">   </span><br><span class="line"><span class="comment">// all following calls return false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray();</span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123;&#125;);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">null</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">undefined</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="number">17</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="string">'Array'</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">true</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123; <span class="attr">__proto__</span>: <span class="built_in">Array</span>.prototype &#125;);</span><br></pre></td></tr></table></figure><p>ECMAScript5中Array.isArray是原生的判断数组的方法，IE9及以上支持。考虑到兼容性，在没有此方法的浏览器中，可以使用Object.prototype.toString.call(obj) === ‘[object Array]’替代。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isArray = <span class="built_in">Array</span>.isArray || <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(obj) === <span class="string">'[object Array]'</span>;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="built_in">console</span>.log(isArray(arr)) <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><h2 id="Array-类型常用原生方法"><a href="#Array-类型常用原生方法" class="headerlink" title="Array 类型常用原生方法"></a>Array 类型常用原生方法</h2><ul><li>concat()</li><li>join()</li><li>slice()</li><li>splice()</li><li>push()</li><li>pop()</li><li>shift()</li><li>unshift()</li></ul><h2 id="concat-方法"><a href="#concat-方法" class="headerlink" title="concat()方法"></a>concat()方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> new_array = old_array.concat(value1[, value2[, ...[, valueN]]])</span><br></pre></td></tr></table></figure><p>concat()方法用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组。</p><p>concat方法创建一个新的数组，它由被调用的对象中的元素组成，每个参数的顺序依次是该参数的元素（如果参数是数组）或参数本身（如果参数不是数组）。它<strong>不会递归</strong>到嵌套数组参数中。</p><ul><li><p>concat方法不会改变this或任何作为参数提供的数组，而是返回一个浅拷贝，它包含与原始数组相结合的相同元素的副本。 原始数组的元素将复制到新数组中，如下所示：</p></li><li><p>对象引用（而不是实际对象）：concat将对象引用复制到新数组中。 原始数组和新数组都引用相同的对象。 也就是说，如果引用的对象被修改，则更改对于新数组和原始数组都是可见的。 这包括也是数组的数组参数的元素。<br>数据类型如字符串，数字和布尔（不是String，Number 和 Boolean 对象）：concat将字符串和数字的值复制到新数组中。</p><p><strong>数组/值在连接时保持不变。此外，对于新数组的任何操作（仅当元素不是对象引用时）都不会对原始数组产生影响，反之亦然。</strong></p></li></ul><h3 id="concat-例子"><a href="#concat-例子" class="headerlink" title="concat()例子"></a>concat()例子</h3><p>连接两个数组 以下代码将两个数组合并为一个新数组：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> alpha = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">var</span> numeric = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">    </span><br><span class="line">    alpha.concat(numeric);</span><br><span class="line">    <span class="comment">// result in ['a', 'b', 'c', 1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">合并嵌套数组以下代码合并数组并保留引用：</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> num1 = [[<span class="number">1</span>]];</span><br><span class="line">    <span class="keyword">var</span> num2 = [<span class="number">2</span>, [<span class="number">3</span>]];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> nums = num1.concat(num2);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">console</span>.log(nums);</span><br><span class="line">    <span class="comment">// results in [[1], 2, [3]]</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// modify the first element of num1</span></span><br><span class="line">    num1[<span class="number">0</span>].push(<span class="number">4</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">console</span>.log(nums);</span><br><span class="line">    <span class="comment">// results in [[1, 4], 2, [3]]</span></span><br></pre></td></tr></table></figure></p><h2 id="join-方法"><a href="#join-方法" class="headerlink" title="join()方法"></a>join()方法</h2><p>join() 方法将数组（或一个类数组对象）的所有元素连接到一个字符串中。不改变原始数组，而是返回新的字符串<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">str = arr.join()</span><br><span class="line"><span class="comment">// 默认为 ","</span></span><br><span class="line"></span><br><span class="line">str = arr.join(<span class="string">""</span>)</span><br><span class="line"><span class="comment">// 分隔符 === 空字符串 ""</span></span><br><span class="line"></span><br><span class="line">str = arr.join(separator)</span><br><span class="line"><span class="comment">// 分隔符</span></span><br></pre></td></tr></table></figure></p><h4 id="separator"><a href="#separator" class="headerlink" title="separator"></a>separator</h4><ul><li><p>指定一个字符串来分隔数组的每个元素。</p></li><li><p>如果需要(separator)，将分隔符转换为字符串。</p></li><li><p>如果省略()，数组元素用逗号分隔。默认为 “,”。</p></li><li><p>如果separator是空字符串(“”)，则所有元素之间都没有任何字符。</p></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><p>一个所有数组元素连接的字符串。如果 arr.length 为0，则返回空字符串</p><h4 id="拓展延伸"><a href="#拓展延伸" class="headerlink" title="拓展延伸"></a>拓展延伸</h4><p>数组contact()方法并不能递归到嵌套数组，可以通过join()方法将数组转换成字符串，然后通过split()方法将字符串输出为数组<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num1 = [[<span class="number">1</span>]];</span><br><span class="line"><span class="keyword">var</span> num2 = [<span class="number">2</span>, [<span class="number">3</span>],[[[<span class="number">7</span>],<span class="number">9</span>],<span class="number">8</span>]];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> nums = num1.concat(num2).join().split();</span><br><span class="line"><span class="comment">// ["1,2,3,7,9,8"]</span></span><br></pre></td></tr></table></figure></p><h2 id="slice-方法"><a href="#slice-方法" class="headerlink" title="slice()方法"></a>slice()方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayObject.slice(start,end)</span><br></pre></td></tr></table></figure><h3 id="slice-返回值"><a href="#slice-返回值" class="headerlink" title="slice()返回值"></a>slice()返回值</h3><p>返回一个新的数组，包含从 start 到 end （不包括该元素）的 arrayObject 中的元素。</p><h2 id="splice-方法"><a href="#splice-方法" class="headerlink" title="splice()方法"></a>splice()方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayObject.splice(index,howmany,item1,.....,itemX)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>index</td><td>必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。</td></tr><tr><td>howmany</td><td>必需。要删除的项目数量。如果设置为 0，则不会删除项目。</td></tr><tr><td>item1,item2,itemX</td><td>可选。向数组添加的新项目。</td></tr></tbody></table><h3 id="splice-返回值"><a href="#splice-返回值" class="headerlink" title="splice()返回值"></a>splice()返回值</h3><p>返回包含被删除项目的新数组，如果有的话。</p><p><strong>请注意，splice() 方法与 slice() 方法的作用是不同的，splice() 方法会直接对数组进行修改。</strong></p><h2 id="push-pop-shift-unshift"><a href="#push-pop-shift-unshift" class="headerlink" title="push/pop/shift/unshift"></a>push/pop/shift/unshift</h2><table><thead><tr><th>方法</th><th>说明</th><th>返回值</th><th>是否改变原数组</th></tr></thead><tbody><tr><td>push</td><td>向数组的末尾添加一个或多个元素，</td><td>新的 length 属性值</td><td>是</td></tr><tr><td>pop</td><td>数组中删除最后一个元素</td><td>该元素的值(当数组为空时返回undefined)</td><td>是</td></tr><tr><td>shift</td><td>从数组中删除第一个元素</td><td>该元素的值(当数组为空时返回undefined)</td><td>是</td></tr><tr><td>unshift</td><td>将一个或多个元素添加到数组的开头</td><td>新的 length 属性值</td><td>是</td></tr></tbody></table><h3 id="push"><a href="#push" class="headerlink" title="push()"></a>push()</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    length: <span class="number">0</span>,</span><br><span class="line">    addElem: <span class="function"><span class="keyword">function</span> <span class="title">addElem</span> (<span class="params">elem</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// obj.length is automatically incremented </span></span><br><span class="line">        <span class="comment">// every time an element is added.</span></span><br><span class="line">        [].push.call(<span class="keyword">this</span>, elem);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Let's add some empty objects just to illustrate.</span></span><br><span class="line">obj.addElem(&#123;&#125;);</span><br><span class="line">obj.addElem(&#123;&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(obj.length);</span><br><span class="line"><span class="comment">// → 2</span></span><br></pre></td></tr></table></figure><h2 id="String类型常用原生方法"><a href="#String类型常用原生方法" class="headerlink" title="String类型常用原生方法"></a>String类型常用原生方法</h2><ul><li>concat()</li><li>slice()  </li><li>substring()</li><li>substr() </li><li>split()</li></ul><table><thead><tr><th>方法</th><th>说明</th><th>返回对象 </th></tr></thead><tbody><tr><td>concat</td><td>连接字符串</td><td>新的字符串（字符串连接，实际情况中用+号更加方便）</td></tr><tr><td>slice</td><td>分割提取字符串</td><td>新的字符串</td></tr><tr><td>substring</td><td>分割提取字符串</td><td>新的字符串</td></tr><tr><td>substr</td><td>分割提取字符串</td><td>新的字符串</td></tr><tr><td>split</td><td>分割成字符串数组</td><td>一个字符串数组</td></tr></tbody></table><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">''</span>hello world;</span><br></pre></td></tr></table></figure><table><thead><tr><th>只有一个参数(正值)</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>str.slice(3)</td><td>// lo world</td><td>返回从位置3到原字符串结尾的字符串</td></tr><tr><td>str.substring(3)</td><td>同上</td><td>同上</td></tr><tr><td>str.substr(3)</td><td>同上</td><td>同上</td></tr></tbody></table><table><thead><tr><th>只有一个参数(负值)</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>str.slice(-3)</td><td>// rld</td><td>将负值加上数组长度 等同于str.splice(8)</td></tr><tr><td>str.substring(-3)</td><td>// hello world</td><td>不接受负参数 等同于 str.substring(0)</td></tr><tr><td>str.substr(-3)</td><td>// rld</td><td>将第一个负值加上数组长度 等同于str.substr(8)</td></tr></tbody></table><table><thead><tr><th>两个参数</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>str.slice(3,7)</td><td>// lo w</td><td>返回原字符串从位置3到7（包括3但是不包括7）之间的字符串</td></tr><tr><td>str.substring(3,7)</td><td>// lo w</td><td>返回原字符串从位置3到7（包括3但是不包括7）之间的字符串</td></tr><tr><td>str.substr(3,7)</td><td>// lo worl</td><td>第二个参数代表返回的字符串个数为7个</td></tr></tbody></table><table><thead><tr><th>两个参数</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>str.slice(3,2)</td><td>空</td><td>都为正值的情况下，第二个参数小于第一个参数即结束位置小于开始位置 无返回值</td></tr><tr><td>str.substring(3,2)</td><td>// l</td><td>开始位置小于结束位置，将自动调整为 str.substring(2,3)</td></tr><tr><td>str.substr(3,2)</td><td>// lo</td><td>第二个参数代表返回的字符串个数为2个</td></tr></tbody></table><table><thead><tr><th>两个参数</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>str.slice(3,-4)</td><td>// lo w</td><td>将负值加上数组长度 等同于substr(3,7)</td></tr><tr><td>str.substring(3,-4)</td><td>// hel</td><td>不接受负参数 等同于 str.substring(3,0) 开始位置小于结束位置，将自动调整为 str.substring(0,3)</td></tr><tr><td>str.substr(3,-4)</td><td>无</td><td>第二个参数不接受负参数 代表返回的字符串个数为0个</td></tr></tbody></table><table><thead><tr><th>两个参数</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>str.slice(-4,-3)</td><td>// o</td><td>将负值加上数组长度 等同于substr(7,8)</td></tr><tr><td>str.substring(-4,-3)</td><td>无</td><td>不接受负参数 等同于 str.substring(0,0) </td></tr><tr><td>str.substr(-4,-3)</td><td>无</td><td>第二个参数不接受负参数 代表返回的字符串个数为0个</td></tr></tbody></table><h2 id="split-方法"><a href="#split-方法" class="headerlink" title="split() 方法"></a>split() 方法</h2><p>split() 方法使用指定的分隔符字符串将一个String对象分割成字符串数组，以将字符串分隔为子字符串，以确定每个拆分的位置。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.split([separator[, limit]])</span><br></pre></td></tr></table></figure></p><h4 id="separator-1"><a href="#separator-1" class="headerlink" title="separator"></a>separator</h4><p>指定表示每个拆分应发生的点的字符串。separator 可以是一个字符串或正则表达式。 如果纯文本分隔符包含多个字符，则必须找到整个字符串来表示分割点。如果在str中省略或不出现分隔符，则返回的数组包含一个由整个字符串组成的元素。如果分隔符为空字符串，则将str原字符串中每个字符的数组形式返回。</p><h4 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h4><p>一个整数，限定返回的分割片段数量。当提供此参数时，split 方法会在指定分隔符的每次出现时分割该字符串，但在限制条目已放入数组时停止。如果在达到指定限制之前达到字符串的末尾，它可能仍然包含少于限制的条目。新数组中不返回剩下的文本。</p><h3 id="split-实例"><a href="#split-实例" class="headerlink" title="split()实例"></a>split()实例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> colorText = <span class="string">"color:white,red,\\xx\\y"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(colorText.split(<span class="regexp">/[\\]+/</span>));  <span class="comment">// ["color:white,red,", "xx", "y"]</span></span><br><span class="line"><span class="built_in">console</span>.log(colorText.split(<span class="regexp">/[^\,]+/</span>)); <span class="comment">// ["", ",", ",", ""]</span></span><br><span class="line"><span class="built_in">console</span>.log(colorText.split(<span class="string">','</span>,<span class="number">2</span>)); <span class="comment">// ["color:white", "red"]</span></span><br></pre></td></tr></table></figure><h2 id="Date类型"><a href="#Date类型" class="headerlink" title="Date类型"></a>Date类型</h2><p>  Date类型使用UTC（国际协调时间）1970年1月1日午夜（零时)开始经过的毫秒数来保存日期<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">// 无参数下 Date对象返回当前的日期和时间</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(value); <span class="comment">// 代表自1970年1月1日00:00:00 (世界标准时间) 起经过的毫秒数。</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(dateString); <span class="comment">//表示日期的字符串值。该字符串应该能被 Date.parse() 方法识别</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(year, month[, day[, hour[, minutes[, seconds[, milliseconds]]]]]); <span class="comment">//代表月份的整数值从0（1月）到11（12月）。</span></span><br></pre></td></tr></table></figure></p><h3 id="Date方法"><a href="#Date方法" class="headerlink" title="Date方法"></a>Date方法</h3><ul><li>Date.now()   返回自 1970-1-1 00:00:00  UTC (世界标准时间)至今所经过的毫秒数。</li><li>Date.parse() 解析一个表示日期的字符串，并返回从 1970-1-1 00:00:00 所经过的毫秒数。</li><li>Date.UTC() 接受和构造函数最长形式的参数相同的参数（从2到7），并返回从 1970-01-01 00:00:00 UTC 开始所经过的毫秒数。</li></ul><h3 id="Date-parse"><a href="#Date-parse" class="headerlink" title="Date.parse()"></a>Date.parse()</h3><p>Date.parse() 方法解析一个表示某个日期的字符串，并返回从1970-1-1 00:00:00 UTC 到该日期对象（该日期对象的UTC时间）的毫秒数，如果该字符串无法识别，或者一些情况下，包含了不合法的日期数值（如：2015-02-31），则返回值为NaN。</p><p>不推荐在ES5之前使用Date.parse方法，因为字符串的解析完全取决于实现。直到至今，不同宿主在如何解析日期字符串上仍存在许多差异，因此最好还是手动解析日期字符串（在需要适应不同格式时库能起到很大帮助）。     </p><h4 id="显式调用"><a href="#显式调用" class="headerlink" title="显式调用"></a>显式调用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Date</span>.parse(dateString)</span><br></pre></td></tr></table></figure><h4 id="隐式调用"><a href="#隐式调用" class="headerlink" title="隐式调用"></a>隐式调用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(dateString)</span><br></pre></td></tr></table></figure><h3 id="Date-UTC"><a href="#Date-UTC" class="headerlink" title="Date.UTC()"></a>Date.UTC()</h3><p>UTC 方法接受以逗号隔开的日期参数，返回1970-1-1 00:00:00 UTC到指定的日期之间的毫秒数。<br>你应该指定一个完整格式的年份，如 1998。如果年份被指定为 0 到 99 之间，则该方法会将年份转换为 20 世纪的一个年份（即 1990 + year），例如，指定为 95， 则年份为 1995。</p><p>如果有一个指定的参数超出其合理范围，则 UTC 方法会通过更新其他参数直到该参数在合理范围内。例如，为月份指定 15，则年份将会加 1，然后月份将会使用 3。</p><h2 id="时间倒计时实例"><a href="#时间倒计时实例" class="headerlink" title="时间倒计时实例"></a>时间倒计时实例</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 移动端 new Date() 传入日期参数出来的时间会比当前的时间+8小时</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">var</span> featureTime = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2018/11/13 13:55:55+0800'</span>);</span><br><span class="line"><span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> timeDiff = (featureTime.getTime() - nowTime.getTime()) / <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">var</span> d = <span class="built_in">parseInt</span>(timeDiff / <span class="number">86400</span>);  <span class="comment">// 一天24小时 一小时60分 一分钟60秒 合计86400 秒</span></span><br><span class="line"><span class="keyword">var</span> h = <span class="built_in">parseInt</span>((timeDiff % <span class="number">86400</span> ) / <span class="number">3600</span>) <span class="comment">// 剩余小时</span></span><br><span class="line"><span class="keyword">var</span> m = <span class="built_in">parseInt</span>((timeDiff % <span class="number">86400</span> ) % <span class="number">3600</span> / <span class="number">60</span>) <span class="comment">//剩余分钟</span></span><br><span class="line"><span class="keyword">var</span> s = <span class="built_in">parseInt</span>( timeDiff % <span class="number">60</span>) <span class="comment">//剩余秒</span></span><br><span class="line"><span class="built_in">console</span>.log(d + <span class="string">'天'</span> + h + <span class="string">'小时'</span> + m + <span class="string">'分钟'</span> + s + <span class="string">'秒'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 看完js高级程序之后对js基本类型的学习和总结&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://liuchao0704.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>css3总结</title>
    <link href="https://liuchao0704.github.io/2017/12/16/css3/"/>
    <id>https://liuchao0704.github.io/2017/12/16/css3/</id>
    <published>2017-12-16T07:04:25.000Z</published>
    <updated>2018-01-06T11:18:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>看似简单的css3,其实高深莫测。<br><a id="more"></a></p><h2 id="sticky-footer-布局"><a href="#sticky-footer-布局" class="headerlink" title="sticky footer 布局"></a>sticky footer 布局</h2><p>css3的一种经典布局。footer紧紧粘在底部，当页面内容不足一页的时候，footer在最底部。当页面内容超过一页，footer自动在底部。</p><p><img src="http://okn6xxp76.bkt.clouddn.com/stickyfooter/sticky-footer.jpg" alt="mark"></p><h3 id="sticky-footer布局思路1"><a href="#sticky-footer布局思路1" class="headerlink" title="sticky-footer布局思路1"></a>sticky-footer布局思路1</h3><p>父元素包裹内容，并给他一个内边距使其等于底部的高度，防止内容覆盖到底部的内容。底部元素有个负的margin值</p><h3 id="css3-代码"><a href="#css3-代码" class="headerlink" title="css3 代码"></a>css3 代码</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-tag">html</span>,</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">        <span class="attribute">min-height</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">"."</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">clear</span>: both;</span><br><span class="line">        <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.content-inside</span> &#123;</span><br><span class="line">        <span class="attribute">padding-top</span>: <span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">padding-right</span>: <span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">padding-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.content-inside</span>&gt;<span class="selector-tag">p</span> &#123;</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">60px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.footer</span> &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#00b3ee</span>;</span><br><span class="line">        <span class="attribute">text-align</span>: center;</span><br><span class="line">        <span class="attribute">color</span>: white;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="div布局"><a href="#div布局" class="headerlink" title="div布局"></a>div布局</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content-inside"</span> <span class="attr">id</span>=<span class="string">"div"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>content<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"addP()"</span>&gt;</span>点击添加文字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">addP</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> para = <span class="built_in">document</span>.createElement(<span class="string">"p"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> node = <span class="built_in">document</span>.createTextNode(<span class="string">'这是一个新段落'</span>);</span></span><br><span class="line"><span class="undefined">        para.appendChild(node);</span></span><br><span class="line"><span class="undefined">        element.appendChild(para);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="sticky-footer-布局思路2"><a href="#sticky-footer-布局思路2" class="headerlink" title="sticky footer 布局思路2"></a>sticky footer 布局思路2</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span>这里是主要内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>这是页脚区块<span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看似简单的css3,其实高深莫测。&lt;br&gt;
    
    </summary>
    
    
      <category term="css3" scheme="https://liuchao0704.github.io/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>angular1开发webApp | 持续更新</title>
    <link href="https://liuchao0704.github.io/2017/07/07/angularApp/"/>
    <id>https://liuchao0704.github.io/2017/07/07/angularApp/</id>
    <published>2017-07-07T13:45:43.000Z</published>
    <updated>2018-03-16T07:12:34.000Z</updated>
    
    <content type="html"><![CDATA[<p> 最近用angular做了一些webApp,也总结了不少的固定套路。现在将固定套路整理如下,主要分为css,js,插件三部分。</p><a id="more"></a> <h2 id="js部分"><a href="#js部分" class="headerlink" title="js部分"></a>js部分</h2><h3 id="利用-rootscope打造轻量级数据管理"><a href="#利用-rootscope打造轻量级数据管理" class="headerlink" title="利用$rootscope打造轻量级数据管理"></a>利用<code>$rootscope</code>打造轻量级数据管理</h3><p> 建议将常量定义在 main.js 里的 <code>$rootscope</code>里,必要时结合<code>$localstorage</code> 使用。好处:一次定义,多次复用，实时更新</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> u = navigator.userAgent;</span><br><span class="line">           $scope.app = &#123;</span><br><span class="line">               errorId:<span class="literal">null</span>, <span class="comment">//错误码</span></span><br><span class="line">               enableToAddEquip: <span class="literal">false</span>, <span class="comment">//是否可以添加设备</span></span><br><span class="line">               environment: <span class="regexp">/localhost/</span>.test(<span class="built_in">window</span>.location.href) ? <span class="string">'dev'</span> : <span class="string">'product'</span>, <span class="comment">//开发or生产环境</span></span><br><span class="line">               logOut: <span class="literal">false</span>, <span class="comment">//是否退出</span></span><br><span class="line">               isAndroid: u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Adr'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Linux'</span>) &gt; <span class="number">-1</span>, <span class="comment">//判断安卓或者苹果</span></span><br><span class="line">               isIphone: u.indexOf(<span class="string">'iPhone'</span>) &gt; <span class="number">-1</span>,</span><br><span class="line">               version: <span class="number">1.0</span>,</span><br><span class="line">               weatherKey: <span class="number">5</span>, <span class="comment">//天气状态码</span></span><br><span class="line">               roleName: $localStorage.app ? $localStorage.app.roleName : <span class="string">''</span>,  <span class="comment">// 不在提示绑定</span></span><br><span class="line">               email: $localStorage.app ? $localStorage.app.email : <span class="string">''</span>,  <span class="comment">// 终端用户 &amp; 安装商email</span></span><br><span class="line">               userName: $localStorage.app ? $localStorage.app.userName : <span class="string">''</span>,</span><br><span class="line">               password: $localStorage.app ? $localStorage.password : <span class="string">''</span>,</span><br><span class="line">               installerSn: $localStorage.app ? $localStorage.app.installerSn : <span class="literal">null</span>,</span><br><span class="line">               operationSn: $localStorage.app ? $localStorage.app.operationSn : <span class="literal">null</span>,</span><br><span class="line">               userSn: $localStorage.app ? $localStorage.app.userSn : <span class="literal">null</span>,</span><br><span class="line">               equipSn: $localStorage.app ? $localStorage.app.equipSn : <span class="literal">null</span>,</span><br><span class="line">               stationId: $localStorage.app ? $localStorage.app.stationId : <span class="literal">null</span>,</span><br><span class="line">               authError: <span class="literal">null</span>,</span><br><span class="line">               successReturnCode: <span class="string">'0000'</span></span><br><span class="line">           &#125;;</span><br></pre></td></tr></table></figure><h3 id="尝试其他方法和后台做数据交互"><a href="#尝试其他方法和后台做数据交互" class="headerlink" title="尝试其他方法和后台做数据交互"></a>尝试其他方法和后台做数据交互</h3><p>这个问题是我在做第一个app中遇到的，如果不用ajax，前端有什么其他方法和后台做数据交互？<br>我的partner提出了一个可行的方法。大致思路是后端拦截前端所有页面间的跳转，前端不主动跳转页面。所有的跳转由后台协助完成。在android系统里前、后端约定好一个函数名称，如果前端调用该函数，函数的参数即是需要交互的数据。后端通过参数获取前端上传的数据。并将前端需要的结果以字符串的形式返回（可以是url，也可以是解析后的JSON字符串）</p><pre><code>var url = window.jsOjb.login(&apos;demo&apos;,&apos;123456&apos;) // demo 用户名 123456 密码 函数的返回值即成功登陆之后的url链接if(url){  window.location.href = url;}</code></pre><p>在ios系统中稍微不一样<br>     var url = window.location.href = ‘,login,name,123456’;</p><h2 id="CSS部分"><a href="#CSS部分" class="headerlink" title="CSS部分"></a>CSS部分</h2><h3 id="rem-解决页面适配问题"><a href="#rem-解决页面适配问题" class="headerlink" title="rem 解决页面适配问题"></a>rem 解决页面适配问题</h3><p>rem 的原理就是根据html的font-size 大小，做到页面的元素宽/高度自适应。而用rem遇到的问题是：如果用<strong>js动态</strong>设置页面的font-size，页面会有一瞬间的先缩小后放大过程。我的解决方案是利用css3的媒体查询直接改变html的font-size大小。此段代码可以写在页面重置css里</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">32px</span> <span class="meta">!important</span>;&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">350px</span>) and (max-width:<span class="number">374px</span>)&#123;<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">35px</span> <span class="meta">!important</span>;&#125;&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">375px</span>) and (max-width:<span class="number">413px</span>)&#123;<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">37px</span><span class="meta">!important</span>;&#125;&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">414px</span>) and (max-width:<span class="number">639px</span>)&#123;<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">41px</span><span class="meta">!important</span>;&#125;&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">640px</span>) and (max-width:<span class="number">719px</span>)&#123;<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">64px</span><span class="meta">!important</span>;&#125;&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">720px</span>) and (max-width:<span class="number">749px</span>)&#123;<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">72px</span><span class="meta">!important</span>;&#125;&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">750px</span>) and (max-width:<span class="number">799px</span>)&#123;<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">75px</span><span class="meta">!important</span>;&#125;&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">800px</span>)&#123;<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">80px</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p> html 部分的meta标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span> /&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- ios自动识别数字为电话号码导致页面错位 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="input-typr-radio-表现怪异"><a href="#input-typr-radio-表现怪异" class="headerlink" title="input[typr=radio]表现怪异"></a>input[typr=radio]表现怪异</h3><p>由于重置了一些css样式导致input输入框的样式变成可以复制粘贴，而不是呈点击状态<br>故将css代码贴出来，防止再入坑<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/* 此代码会导致<span class="built_in">input</span>单选框怪异模式*/</span><br><span class="line"> <span class="built_in">input</span>:-webkit-user-modify:<span class="built_in">read</span>-<span class="built_in">write</span>-plaintext-only;</span><br></pre></td></tr></table></figure></p><h2 id="sticky-footer-布局"><a href="#sticky-footer-布局" class="headerlink" title="[sticky footer 布局]"></a>[sticky footer 布局]</h2><p><a href="https://liuchao0704.github.io/2017/12/16/css3/">点击查看</a></p><h2 id="App单页面切换效果"><a href="#App单页面切换效果" class="headerlink" title="App单页面切换效果"></a>App单页面切换效果</h2><p>SPA加上页面切换效果堪比原生App<a href="https://github.com/liuchao0704/angularWebApp.git" target="_blank" rel="noopener">点击查看</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 最近用angular做了一些webApp,也总结了不少的固定套路。现在将固定套路整理如下,主要分为css,js,插件三部分。&lt;/p&gt;
    
    </summary>
    
    
      <category term="angular" scheme="https://liuchao0704.github.io/tags/angular/"/>
    
      <category term="webApp" scheme="https://liuchao0704.github.io/tags/webApp/"/>
    
  </entry>
  
  <entry>
    <title>Vue 开发 SPA</title>
    <link href="https://liuchao0704.github.io/2017/07/01/vueApp/"/>
    <id>https://liuchao0704.github.io/2017/07/01/vueApp/</id>
    <published>2017-07-01T06:57:05.000Z</published>
    <updated>2017-10-12T09:12:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>  用 vue-cli框架搭建一款SPA(参考妙味视频)<br><a id="more"></a></p><h3 id="全局安装-vue-cli-只需一次安装"><a href="#全局安装-vue-cli-只需一次安装" class="headerlink" title="全局安装 vue-cli(只需一次安装)"></a>全局安装 vue-cli(只需一次安装)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g vue-cli</span><br></pre></td></tr></table></figure><h3 id="webpack模板搭建"><a href="#webpack模板搭建" class="headerlink" title="webpack模板搭建"></a>webpack模板搭建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vue init webpack my-project</span><br></pre></td></tr></table></figure><h3 id="安装-amp-启动"><a href="#安装-amp-启动" class="headerlink" title="安装 &amp; 启动"></a>安装 &amp; 启动</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br><span class="line">$ npm run dev</span><br></pre></td></tr></table></figure><p>用webstrom 命令行代替每次手动输入<br><img src="http://okn6xxp76.bkt.clouddn.com/image/vue/vue1.png" alt="mark"><br><img src="http://okn6xxp76.bkt.clouddn.com/image/vue/vue2.png" alt="mark"></p><h3 id="stylus-loader-的安装"><a href="#stylus-loader-的安装" class="headerlink" title="stylus-loader 的安装"></a>stylus-loader 的安装</h3><p>   这是css的预处理插件，慕课网上的视频安装方法对我本人不管用，具体报错是<code>up to date</code>于是网上各种搜索，找到一款还算靠谱的方案<br>在package.json文件中写入依赖：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"stylus-loader"</span>: <span class="string">"^2.5.0"</span>,</span><br><span class="line"><span class="string">"stylus"</span>: <span class="string">"0.52.4"</span>,</span><br></pre></td></tr></table></figure><p>然后执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm i stylus-loader stylus --save</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm run dev</span></span><br></pre></td></tr></table></figure><p>同理安装路由也是(说明：为了和视频一样，我一开始没有选择安装路由，到后面自己安装的，不过现在的vue-cli已经可以在初始化安装的时候提醒你是否选择安装router 直接选择yes 即可)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"vue-router"</span>: <span class="string">"^2.7.0"</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm i vue-router --save</span></span><br></pre></td></tr></table></figure><p>套路安装vue-resource</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"vue-router"</span>: <span class="string">"^2.7.0"</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm i vue-resource --save</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  用 vue-cli框架搭建一款SPA(参考妙味视频)&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://liuchao0704.github.io/tags/js/"/>
    
      <category term="vue" scheme="https://liuchao0704.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Angular $on、$emit、$broadcast 事件传播时机分析</title>
    <link href="https://liuchao0704.github.io/2017/05/17/broadcast/"/>
    <id>https://liuchao0704.github.io/2017/05/17/broadcast/</id>
    <published>2017-05-17T13:43:51.000Z</published>
    <updated>2018-01-06T11:18:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>小小的总结<br><a id="more"></a></p><h3 id="事件传播的时机分析"><a href="#事件传播的时机分析" class="headerlink" title="事件传播的时机分析"></a>事件传播的时机分析</h3><hr><p>事件传播的格式和用法比较简单。而对于事件传播的时机有可以分析的地方。其中js的执行顺序是先执行父级controller，再执行子级controller，所以当父级发出事件的时候，子级有可能接收不到事件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</span><br><span class="line">app.controller(<span class="string">'ParentCtrlrl'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$scope, $http</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 父级接收事件</span></span><br><span class="line">    $scope.$on(<span class="string">'to-parent'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e, data</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//父级直接传播事件1</span></span><br><span class="line">    $scope.$broadcast(<span class="string">'to-child'</span>, <span class="string">'x'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//父级异步传播事件2</span></span><br><span class="line">     $http.post(<span class="string">'api.json'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (res.data.success) &#123;</span><br><span class="line">            $scope.$broadcast(<span class="string">'to-child'</span>, <span class="string">'y'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">     <span class="comment">//父级点击传播事件3</span></span><br><span class="line">    $scope.click = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $scope.$broadcast(<span class="string">'to-child'</span>, <span class="string">'z'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.controller(<span class="string">'SelfCtrl'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$scope</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 子级直接传播事件1</span></span><br><span class="line">    $scope.$emit(<span class="string">'to-parent'</span>, <span class="string">'1'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 子级接收事件2</span></span><br><span class="line">    $scope.$on(<span class="string">'to-child'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e, data</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>看一下打印结果</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">y</span><br><span class="line">z <span class="comment">//点击之后出现z,而x始终未出现</span></span><br></pre></td></tr></table></figure><p>思考父级controller如何在子级js执行后传播事件？<br>我的思路是：增加一个子级向上通知的事件。子级先向父级传播事件 →父级接收到事件后 → 父级向下传播事件 → 子级接收事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</span><br><span class="line">     app.controller(<span class="string">'ParentCtrlrl'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$scope, $http</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 父级接收事件之后再传播</span></span><br><span class="line">    $scope.$on(<span class="string">'to-parent'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e, data</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">        $scope.$broadcast(<span class="string">'to-child'</span>, <span class="string">'x'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.controller(<span class="string">'SelfCtrl'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$scope</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 子级接收事件2</span></span><br><span class="line">    $scope.$on(<span class="string">'to-child'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e, data</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 子级直接传播事件1</span></span><br><span class="line">    $scope.$emit(<span class="string">'to-parent'</span>, <span class="string">'1'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>查看一下打印结果</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">X</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小小的总结&lt;br&gt;
    
    </summary>
    
    
      <category term="angular" scheme="https://liuchao0704.github.io/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>Select与Datepicker插件控制日期</title>
    <link href="https://liuchao0704.github.io/2017/04/23/datepicker/"/>
    <id>https://liuchao0704.github.io/2017/04/23/datepicker/</id>
    <published>2017-04-23T06:57:33.000Z</published>
    <updated>2017-12-31T05:42:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>   Date对象和Datepicker插件使用总结<br><a id="more"></a></p><p><img src="http://okn6xxp76.bkt.clouddn.com/datepicker/datepicker.gif" alt="mark"></p><h3 id="datepicker-基本用法"><a href="#datepicker-基本用法" class="headerlink" title="datepicker 基本用法"></a>datepicker 基本用法</h3><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group date"</span> <span class="attr">id</span>=<span class="string">"date"</span> <span class="attr">data-provide</span>=<span class="string">"datepicker"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">readonly</span>=<span class="string">"readonly"</span> <span class="attr">ng-disabled</span>=<span class="string">"disable"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-th"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(&apos;#date&apos;).datepicker(&#123;</span><br><span class="line">    language: &apos;zh-CN&apos;,</span><br><span class="line">    autoclose: true,</span><br><span class="line">    format: &apos;yyyy-mm-dd&apos;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>直接将日期更新到今日</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>()) <span class="comment">// 日期更新到今日</span></span><br></pre></td></tr></table></figure><h3 id="Select-改变日期预览格式-支持日-月-年视图切换"><a href="#Select-改变日期预览格式-支持日-月-年视图切换" class="headerlink" title="Select 改变日期预览格式 支持日/月/年视图切换"></a>Select 改变日期预览格式 支持日/月/年视图切换</h3><hr><p>月视图写法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> $(<span class="string">'#date'</span>).datepicker(&#123;</span><br><span class="line">    language: <span class="string">'zh-CN'</span>,</span><br><span class="line">    autoclose: <span class="literal">true</span>,</span><br><span class="line">    startView: <span class="number">1</span>,</span><br><span class="line">    maxViewMode: <span class="number">1</span>,</span><br><span class="line">    minViewMode: <span class="number">1</span>,</span><br><span class="line">    format: <span class="string">'yyyy-mm'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="点击前后按钮实现日期自动-1-1切换"><a href="#点击前后按钮实现日期自动-1-1切换" class="headerlink" title="点击前后按钮实现日期自动+1/-1切换"></a>点击前后按钮实现日期自动+1/-1切换</h3><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>日期联动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--datepicker css --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"dist/css/bootstrap-datepicker.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"angular-1.3.0.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--datepicker js --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"dist/js/bootstrap-datepicker.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--datepicker language js --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"dist/locales/bootstrap-datepicker.zh-CN.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"myCtrl"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"col-xs-12"</span>&gt;</span> Select与Datepicker插件控制日期<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-5"</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"dateType"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">ng-model</span>=<span class="string">"dateType"</span> <span class="attr">ng-change</span>=<span class="string">"dateTypeChange(dateType)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>日<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>月<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>年<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span>&gt;</span>总<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-1"</span> <span class="attr">ng-click</span>=<span class="string">"gotoPreNext(0)"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-left"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-5"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group date"</span> <span class="attr">id</span>=<span class="string">"date"</span> <span class="attr">data-provide</span>=<span class="string">"datepicker"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">readonly</span>=<span class="string">"readonly"</span> <span class="attr">ng-disabled</span>=<span class="string">"disable"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-th"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-1"</span> <span class="attr">ng-click</span>=<span class="string">"gotoPreNext(1)"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-right</span></span></span><br><span class="line"><span class="tag"><span class="string">glyphicon glyphicon-"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</span></span><br><span class="line"><span class="actionscript">    app.controller(<span class="string">'myCtrl'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        $scope.dateType = <span class="string">'1'</span>; <span class="comment">// 初始化默认日期类型为日;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 为Date 添加format方法</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">Date</span>.prototype.format = <span class="function"><span class="keyword">function</span>(<span class="params">fmt</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> o = &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="string">"M+"</span>: <span class="keyword">this</span>.getMonth() + <span class="number">1</span>, <span class="comment">//月份</span></span></span><br><span class="line"><span class="actionscript">                <span class="string">"d+"</span>: <span class="keyword">this</span>.getDate(), <span class="comment">//日</span></span></span><br><span class="line"><span class="actionscript">                <span class="string">"h+"</span>: <span class="keyword">this</span>.getHours(), <span class="comment">//小时</span></span></span><br><span class="line"><span class="actionscript">                <span class="string">"m+"</span>: <span class="keyword">this</span>.getMinutes(), <span class="comment">//分</span></span></span><br><span class="line"><span class="actionscript">                <span class="string">"s+"</span>: <span class="keyword">this</span>.getSeconds(), <span class="comment">//秒</span></span></span><br><span class="line"><span class="javascript">                <span class="string">"q+"</span>: <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>), <span class="comment">//季度</span></span></span><br><span class="line"><span class="actionscript">                <span class="string">"S"</span>: <span class="keyword">this</span>.getMilliseconds() <span class="comment">//毫秒</span></span></span><br><span class="line"><span class="undefined">            &#125;;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt)) &#123;</span></span><br><span class="line"><span class="javascript">                fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear() + <span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span> + k + <span class="string">")"</span>).test(fmt)) &#123;</span></span><br><span class="line"><span class="javascript">                    fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length == <span class="number">1</span>) ? (o[k]) : ((<span class="string">"00"</span> + o[k]).substr((<span class="string">""</span> + o[k]).length)));</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> fmt;</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#date'</span>).datepicker(&#123;</span></span><br><span class="line"><span class="actionscript">            language: <span class="string">'zh-CN'</span>,</span></span><br><span class="line"><span class="actionscript">            autoclose: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">            format: <span class="string">'yyyy-mm-dd'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>()) <span class="comment">// 默认当天日期</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        $scope.disable = <span class="literal">false</span>; <span class="comment">// 默认可选日期</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        $scope.dateTypeChange = <span class="function"><span class="keyword">function</span><span class="params">(type)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> str = <span class="string">''</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">switch</span> (<span class="built_in">parseInt</span>(type))</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">case</span> <span class="number">1</span>:</span></span><br><span class="line"><span class="actionscript">                    $scope.disable = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date'</span>).datepicker(<span class="string">'remove'</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date'</span>).datepicker(&#123;</span></span><br><span class="line"><span class="actionscript">                        language: <span class="string">'zh-CN'</span>,</span></span><br><span class="line"><span class="actionscript">                        autoclose: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">                        format: <span class="string">'yyyy-mm-dd'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    &#125;);</span></span><br><span class="line"><span class="javascript">                   $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>())</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">case</span> <span class="number">2</span>:</span></span><br><span class="line"><span class="actionscript">                    $scope.disable = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date'</span>).datepicker(<span class="string">'remove'</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date'</span>).datepicker(&#123;</span></span><br><span class="line"><span class="actionscript">                        language: <span class="string">'zh-CN'</span>,</span></span><br><span class="line"><span class="actionscript">                        autoclose: <span class="literal">true</span>,</span></span><br><span class="line"><span class="undefined">                        startView: 1,</span></span><br><span class="line"><span class="undefined">                        maxViewMode: 1,</span></span><br><span class="line"><span class="undefined">                        minViewMode: 1,</span></span><br><span class="line"><span class="actionscript">                        format: <span class="string">'yyyy-mm'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    &#125;);</span></span><br><span class="line"><span class="javascript">                    str = <span class="keyword">new</span> <span class="built_in">Date</span>().format(<span class="string">'yyyy-MM'</span>)</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, str)</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">case</span> <span class="number">3</span>:</span></span><br><span class="line"><span class="actionscript">                    $scope.disable = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date'</span>).datepicker(<span class="string">'remove'</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date'</span>).datepicker(&#123;</span></span><br><span class="line"><span class="actionscript">                        language: <span class="string">'zh-CN'</span>,</span></span><br><span class="line"><span class="actionscript">                        autoclose: <span class="literal">true</span>,</span></span><br><span class="line"><span class="undefined">                        startView: 2,</span></span><br><span class="line"><span class="undefined">                        maxViewMode: 2,</span></span><br><span class="line"><span class="undefined">                        minViewMode: 2,</span></span><br><span class="line"><span class="actionscript">                        format: <span class="string">'yyyy'</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    &#125;);</span></span><br><span class="line"><span class="javascript">                    str = <span class="keyword">new</span> <span class="built_in">Date</span>().format(<span class="string">'yyyy'</span>)</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, str)</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">case</span> <span class="number">4</span>:</span></span><br><span class="line"><span class="actionscript">                    $scope.disable = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date input'</span>).val(<span class="string">'---'</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#date'</span>).datepicker(<span class="string">'remove'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                 <span class="keyword">default</span>:</span></span><br><span class="line"><span class="actionscript">                 <span class="keyword">break</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">     </span></span><br><span class="line"><span class="actionscript">       <span class="comment">// 前后按钮改变日期 前一天 后一天</span></span></span><br><span class="line"><span class="actionscript">        $scope.gotoPreNext = <span class="function"><span class="keyword">function</span><span class="params">(flag)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> curDate =  $(<span class="string">'#date input'</span>).val();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> dateY = <span class="built_in">parseInt</span>(curDate.split(<span class="string">'-'</span>)[<span class="number">0</span>])|| <span class="built_in">parseInt</span>(curDate);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 年比较特殊 不需要分割直接使用</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> dateM = <span class="built_in">parseInt</span>(curDate.split(<span class="string">'-'</span>)[<span class="number">1</span>])|| <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> dateD = <span class="built_in">parseInt</span>(curDate.split(<span class="string">'-'</span>)[<span class="number">2</span>])|| <span class="number">0</span>;</span></span><br><span class="line"><span class="undefined">            </span></span><br><span class="line"><span class="javascript">            <span class="keyword">debugger</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">switch</span> (<span class="built_in">parseInt</span>($scope.dateType)) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">case</span> <span class="number">1</span>:</span></span><br><span class="line"><span class="actionscript">             <span class="keyword">if</span>(flag)&#123;</span></span><br><span class="line"><span class="javascript">               $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>(dateY, dateM<span class="number">-1</span> , dateD + <span class="number">1</span>))</span></span><br><span class="line"><span class="actionscript">             &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>(dateY, dateM<span class="number">-1</span> , dateD <span class="number">-1</span>))</span></span><br><span class="line"><span class="undefined">             &#125;</span></span><br><span class="line"><span class="undefined">            </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">case</span> <span class="number">2</span>:</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">if</span>(flag)&#123;</span></span><br><span class="line"><span class="javascript">               $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>(dateY, dateM, <span class="number">1</span>));</span></span><br><span class="line"><span class="actionscript">             &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>(dateY, dateM<span class="number">-2</span>, <span class="number">1</span>))</span></span><br><span class="line"><span class="undefined">             &#125;</span></span><br><span class="line"><span class="undefined">            </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">case</span> <span class="number">3</span>:</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">if</span>(flag)&#123;</span></span><br><span class="line"><span class="javascript">               $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>(dateY + <span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>))</span></span><br><span class="line"><span class="actionscript">             &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#date'</span>).datepicker(<span class="string">'update'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>(dateY - <span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>))</span></span><br><span class="line"><span class="undefined">             &#125;</span></span><br><span class="line"><span class="undefined">            </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">default</span>:</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">break</span>; </span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">  &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;   Date对象和Datepicker插件使用总结&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://liuchao0704.github.io/tags/js/"/>
    
      <category term="date" scheme="https://liuchao0704.github.io/tags/date/"/>
    
  </entry>
  
  <entry>
    <title>Angular JS动态控制多选框全选与全不选并且打印选中的值</title>
    <link href="https://liuchao0704.github.io/2017/04/10/multiselect/"/>
    <id>https://liuchao0704.github.io/2017/04/10/multiselect/</id>
    <published>2017-04-10T12:34:40.000Z</published>
    <updated>2018-01-28T12:55:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>Angular JS获取多选框处理的值<br><a id="more"></a></p><p><img src="http://okn6xxp76.bkt.clouddn.com/image/hexo/checkbox.gif" alt="mark"><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.static.runoob.com/libs/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"vipApplyEditCtrl"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"color in colors"</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">ng-checked</span>=<span class="string">"isChecked(color.id)"</span>   </span></span><br><span class="line"><span class="tag">                <span class="attr">ng-click</span>=<span class="string">"updateSelection($event,color.id)"</span> /&gt;</span>&#123;&#123;color.name&#125;&#125;  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>  </span><br><span class="line">        Selected : &#123;&#123;selected&#125;&#125;  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</span></span><br><span class="line"><span class="actionscript">    app.controller(<span class="string">"vipApplyEditCtrl"</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;  </span></span><br><span class="line"><span class="undefined">        $scope.colors = [  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">1</span>, name : <span class="string">'black'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">2</span>, name : <span class="string">'red'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">3</span>, name : <span class="string">'blue'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">4</span>, name : <span class="string">'yellow'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">5</span>, name : <span class="string">'green'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">6</span>, name : <span class="string">'white'</span>&#125;  </span></span><br><span class="line"><span class="undefined">        ] ;  </span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="undefined">        $scope.selected = [] ;  </span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="actionscript">        $scope.isChecked = <span class="function"><span class="keyword">function</span><span class="params">(id)</span></span>&#123;  </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> $scope.selected.indexOf(id) &gt;= <span class="number">0</span> ;  </span></span><br><span class="line"><span class="undefined">        &#125; ;</span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="actionscript">        $scope.updateSelection = <span class="function"><span class="keyword">function</span><span class="params">($event,id)</span></span>&#123;  </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> checkbox = $event.target ;  </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> checked = checkbox.checked ;  </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span>(checked)&#123;  </span></span><br><span class="line"><span class="undefined">                $scope.selected.push(id) ;  </span></span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;  </span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> idx = $scope.selected.indexOf(id) ;  </span></span><br><span class="line"><span class="undefined">                $scope.selected.splice(idx,1) ;  </span></span><br><span class="line"><span class="undefined">            &#125;  </span></span><br><span class="line"><span class="undefined">        &#125; ;  </span></span><br><span class="line"><span class="undefined">    &#125;);  </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="通过ng-checked-属性选中某个多选框"><a href="#通过ng-checked-属性选中某个多选框" class="headerlink" title="通过ng-checked 属性选中某个多选框"></a>通过ng-checked 属性选中某个多选框</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$scope.selected = [<span class="number">2</span>] ;  <span class="comment">// 支持预先选中某个选项</span></span><br></pre></td></tr></table></figure><h3 id="增加全选和取消全选的按钮"><a href="#增加全选和取消全选的按钮" class="headerlink" title="增加全选和取消全选的按钮"></a>增加全选和取消全选的按钮</h3><p>   1、增加一个开关控制单选或者全选(可以用checkbox 或者 radio)<br>   2、动态改变select数组<br>   3、单个选项进行操作的时候判断是否改变了全选或者非全选的状态，如果改变动态更新<br>   4、涉及到checkbox 和 radio 操作请使用ng-change来代替ng-click，否则model值为undefined或者未更新<br>   5、针对第四条补充说明如果是单纯的点击操作，不涉及到model值的传递，可以用ng-click，但是需要将model值作为函数的参数进行传递的时候请使用ng-change比较稳妥。</p><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"angular-1.3.0.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"vipApplyEditCtrl"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span>  </span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">"checkbox"</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">name</span>=<span class="string">"all"</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">ng-model</span>=<span class="string">"all"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">ng-change</span>=<span class="string">"toSelectAll(all)"</span>&gt;</span> 全选 </span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span>&gt;</span>&#123;&#123;all&#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"color in colors"</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> </span></span><br><span class="line"><span class="tag">                  <span class="attr">type</span>=<span class="string">"checkbox"</span> </span></span><br><span class="line"><span class="tag">                  <span class="attr">ng-checked</span>=<span class="string">"isChecked(color.id)"</span>   </span></span><br><span class="line"><span class="tag">                  <span class="attr">ng-click</span>=<span class="string">"updateSelection($event,color.id)"</span> </span></span><br><span class="line"><span class="tag">                  /&gt;</span></span><br><span class="line">                  &#123;&#123;color.name&#125;&#125;  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        Selected :&#123;&#123;selected&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</span></span><br><span class="line"><span class="actionscript">    app.controller(<span class="string">"vipApplyEditCtrl"</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;  </span></span><br><span class="line"><span class="undefined">        $scope.formData = &#123;&#125;;</span></span><br><span class="line"><span class="undefined">        $scope.colors = [  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">1</span>, name : <span class="string">'black'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">2</span>, name : <span class="string">'red'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">3</span>, name : <span class="string">'blue'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">4</span>, name : <span class="string">'yellow'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">5</span>, name : <span class="string">'green'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">            &#123;id : <span class="number">6</span>, name : <span class="string">'white'</span>&#125;  </span></span><br><span class="line"><span class="undefined">        ] ;  </span></span><br><span class="line"><span class="undefined">          </span></span><br><span class="line"><span class="undefined">         $scope.selected = [] ;  </span></span><br><span class="line"><span class="actionscript">         $scope.isChecked = <span class="function"><span class="keyword">function</span><span class="params">(id)</span></span>&#123;  </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> $scope.selected.indexOf(id) &gt;= <span class="number">0</span> ;  </span></span><br><span class="line"><span class="undefined">         &#125; ; </span></span><br><span class="line"><span class="actionscript">        $scope.updateSelection = <span class="function"><span class="keyword">function</span><span class="params">($event,id)</span></span>&#123;  </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> checkbox = $event.target ;  </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> checked = checkbox.checked ;  </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span>(checked)&#123;  </span></span><br><span class="line"><span class="undefined">                $scope.selected.push(id);</span></span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;  </span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> idx = $scope.selected.indexOf(id) ;  </span></span><br><span class="line"><span class="undefined">                $scope.selected.splice(idx,1) ;  </span></span><br><span class="line"><span class="undefined">            &#125;  </span></span><br><span class="line"><span class="actionscript">             <span class="keyword">if</span>($scope.selected.length == $scope.colors.length) &#123;</span></span><br><span class="line"><span class="actionscript">                    $scope.all = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">             &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    $scope.all = <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">             &#125;   </span></span><br><span class="line"><span class="undefined">        &#125; ;</span></span><br><span class="line"><span class="actionscript">        $scope.toSelectAll = <span class="function"><span class="keyword">function</span><span class="params">(flag)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">             <span class="keyword">if</span>(flag)&#123;</span></span><br><span class="line"><span class="undefined">                 $scope.selected = []</span></span><br><span class="line"><span class="actionscript">                  angular.forEach($scope.colors, <span class="function"><span class="keyword">function</span> <span class="params">(i)</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">                    $scope.selected.push(i.id);</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="actionscript">             &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                 angular.forEach($scope.colors, <span class="function"><span class="keyword">function</span> <span class="params">(i)</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">                    $scope.selected = [];</span></span><br><span class="line"><span class="undefined">                &#125;)       </span></span><br><span class="line"><span class="undefined">             &#125;       </span></span><br><span class="line"><span class="undefined">        &#125;  </span></span><br><span class="line"><span class="undefined">    &#125;);  </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"angular-1.3.0.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"vipApplyEditCtrl"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">"checkbox"</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">"all"</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">ng-model</span>=<span class="string">"all"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">ng-change</span>=<span class="string">"toSelectAll(all)"</span>&gt;</span> 全选 </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span>&gt;</span>&#123;&#123;all&#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"color in colors"</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">"checkbox"</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">ng-checked</span>=<span class="string">"color.checked == true"</span>   </span></span><br><span class="line"><span class="tag">              <span class="attr">ng-click</span>=<span class="string">"updateSelection(color)"</span> </span></span><br><span class="line"><span class="tag">              /&gt;</span></span><br><span class="line">              &#123;&#123;color.name&#125;&#125;  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    Selected :&#123;&#123;selected&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = angular.module(<span class="string">'myApp'</span>, []);</span></span><br><span class="line"><span class="actionscript">app.controller(<span class="string">"vipApplyEditCtrl"</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>&#123;  </span></span><br><span class="line"><span class="undefined">    $scope.formData = &#123;&#125;;</span></span><br><span class="line"><span class="undefined">    $scope.colors = [  </span></span><br><span class="line"><span class="actionscript">        &#123;id : <span class="number">1</span>, name : <span class="string">'black'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">        &#123;id : <span class="number">2</span>, name : <span class="string">'red'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">        &#123;id : <span class="number">3</span>, name : <span class="string">'blue'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">        &#123;id : <span class="number">4</span>, name : <span class="string">'yellow'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">        &#123;id : <span class="number">5</span>, name : <span class="string">'green'</span>&#125;,  </span></span><br><span class="line"><span class="actionscript">        &#123;id : <span class="number">6</span>, name : <span class="string">'white'</span>&#125;  </span></span><br><span class="line"><span class="undefined">    ] ;  </span></span><br><span class="line"><span class="undefined">      </span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">     $scope.selected = [] ;  </span></span><br><span class="line"><span class="actionscript">    $scope.updateSelection = <span class="function"><span class="keyword">function</span><span class="params">(obj)</span></span>&#123;  </span></span><br><span class="line"><span class="undefined">       </span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(!obj.checked )&#123;  </span></span><br><span class="line"><span class="actionscript">            obj.checked = <span class="literal">true</span>;</span></span><br><span class="line"><span class="undefined">            $scope.selected.push(obj.id);</span></span><br><span class="line"><span class="undefined">           </span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span>&#123;  </span></span><br><span class="line"><span class="actionscript">            obj.checked = <span class="literal">false</span>; </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> idx = $scope.selected.indexOf(obj.id) ;  </span></span><br><span class="line"><span class="undefined">            $scope.selected.splice(idx,1) ; </span></span><br><span class="line"><span class="undefined">        &#125;  </span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">         <span class="keyword">if</span>($scope.selected.length == $scope.colors.length) &#123;</span></span><br><span class="line"><span class="actionscript">                $scope.all = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">         &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                $scope.all = <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">         &#125;   </span></span><br><span class="line"><span class="undefined">    &#125; ;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    $scope.toSelectAll = <span class="function"><span class="keyword">function</span><span class="params">(flag)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">         <span class="keyword">if</span>(flag)&#123;</span></span><br><span class="line"><span class="undefined">             $scope.selected = []</span></span><br><span class="line"><span class="actionscript">              angular.forEach($scope.colors, <span class="function"><span class="keyword">function</span> <span class="params">(i)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                i.checked = <span class="literal">true</span>;</span></span><br><span class="line"><span class="undefined">                $scope.selected.push(i.id);</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="actionscript">         &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">             angular.forEach($scope.colors, <span class="function"><span class="keyword">function</span> <span class="params">(i)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                i.checked = <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">                $scope.selected = [];</span></span><br><span class="line"><span class="undefined">            &#125;) </span></span><br><span class="line"><span class="undefined">         &#125;</span></span><br><span class="line"><span class="undefined">    &#125;  </span></span><br><span class="line"><span class="undefined">&#125;);  </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Angular JS获取多选框处理的值&lt;br&gt;
    
    </summary>
    
    
      <category term="angular" scheme="https://liuchao0704.github.io/tags/angular/"/>
    
      <category term="js" scheme="https://liuchao0704.github.io/tags/js/"/>
    
      <category term="checkbox" scheme="https://liuchao0704.github.io/tags/checkbox/"/>
    
  </entry>
  
  <entry>
    <title>简约黑白风改造清爽一居室 | 更新</title>
    <link href="https://liuchao0704.github.io/2017/03/29/direction/"/>
    <id>https://liuchao0704.github.io/2017/03/29/direction/</id>
    <published>2017-03-29T12:09:50.000Z</published>
    <updated>2018-02-18T08:50:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>  40平老破小出租房变身清爽一居室。由于本人资金匮乏加上半个颜控，还要面对顽固的反对派，所以这注定是一个不太完美并且艰辛的装修之旅。<br><a id="more"></a></p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>装修之前参考了一兜糖的TTTTTT的案例，觉得特别给力，无论是面积和风格都无一不击中我的少女心。后来在某群里偶遇TTTTTT本人才知道对方是资深装修达人，哦，对了忘记插一句关于TTTTTT是美少女的人设也只是我的一厢情愿而已，其实T总是超级暖男！！！回归正题，二手房装修特别是房龄长的二手房改造其实很费神费力。</p><h2 id="毕业照"><a href="#毕业照" class="headerlink" title="毕业照"></a>毕业照</h2><p><img src="http://okn6xxp76.bkt.clouddn.com/house/all-1.jpg" alt=""></p><h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><p>17年5月份开始动工的，选择全包，本人工作繁忙，所有东西能网购解决的绝对不出门半步。也属于无人监工状态，很多地方都只能选择睁只眼闭只眼。如果有下次装修，还是要留人盯着看，工期和质量各方面都有保证。</p><h2 id="第一版设计图"><a href="#第一版设计图" class="headerlink" title="第一版设计图"></a>第一版设计图</h2><p><img src="http://okn6xxp76.bkt.clouddn.com/house/build-02.png" alt="mark"><br>1、封闭式厨房U型设计，含冰箱<br>2、书房餐厅功能合并，增加干区洗面台，干湿分离<br>3、卫生间去掉浴缸改为淋浴<br>4、阳台放置洗衣机满足生活阳台功能<br>5、第一版水电点位确定</p><table><thead><tr><th style="text-align:left">区域</th><th style="text-align:center">明细</th><th style="text-align:center">个数</th><th style="text-align:left">明细</th></tr></thead><tbody><tr><td style="text-align:left">厨房</td><td style="text-align:center">双控开关</td><td style="text-align:center">1对</td><td style="text-align:left">玄关口1个，靠近卧室门口1个，用于厨房主照明代替玄关照明？</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">距地1.8m，灶台上方，预留给抽烟机</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">带开关五孔插座</td><td style="text-align:center">3个</td><td style="text-align:left">避开灶台和水槽，电饭煲，热水壶，微波炉</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">燃气热水器</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">冰箱侧后方冰箱用</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">五孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">预留给净水器和垃圾处理器</td></tr><tr><td style="text-align:left">卫生间</td><td style="text-align:center">集成式浴霸开关</td><td style="text-align:center">1个</td><td style="text-align:left">可以控制风暖排气照明</td></tr><tr><td style="text-align:left">卫生间</td><td style="text-align:center">防水盖五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">预留给智能马桶，提前知道马桶尺寸</td></tr><tr><td style="text-align:left">卫生间</td><td style="text-align:center">开关</td><td style="text-align:center">1个</td><td style="text-align:left">照明</td></tr><tr><td style="text-align:left">餐厅</td><td style="text-align:center">开关</td><td style="text-align:center">1个</td><td style="text-align:left">餐厅主照明</td></tr><tr><td style="text-align:left">餐厅</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">火锅、电磁炉 、手机充电</td></tr><tr><td style="text-align:left">餐厅</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">预留空气净化器或者吸尘器</td></tr><tr><td style="text-align:left">餐厅</td><td style="text-align:center">16A三孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">空调挂机</td></tr><tr><td style="text-align:left">餐厅-洗面台</td><td style="text-align:center">开关</td><td style="text-align:center">1个</td><td style="text-align:left">照明筒灯</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">双控开关</td><td style="text-align:center">1对</td><td style="text-align:left">控制卧室主照明</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">四孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">台灯、手机充电用 床头一侧分布2个</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">五孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">书桌上面 笔记本用，台灯用</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">五孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">书桌下面 预留</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">16A三孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">空调挂机</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">预留空气净化器或者吸尘器</td></tr><tr><td style="text-align:left">阳台家务</td><td style="text-align:center">开关</td><td style="text-align:center">1个</td><td style="text-align:left">阳台主照明</td></tr><tr><td style="text-align:left">阳台家务</td><td style="text-align:center">防水盖五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">洗衣机</td></tr></tbody></table><h2 id="第二版修改"><a href="#第二版修改" class="headerlink" title="第二版修改"></a>第二版修改</h2><p>1、封闭式厨房L型设计，去掉部分上下柜<br>2、餐厅增加干区洗面台+防水吊顶<br>3、衣柜+射灯控制（仿衣帽间）<br>4、第二版水电点位确定</p><table><thead><tr><th style="text-align:left">区域</th><th style="text-align:center">明细</th><th style="text-align:center">个数</th><th style="text-align:left">明细</th></tr></thead><tbody><tr><td style="text-align:left">玄关</td><td style="text-align:center">双控开关</td><td style="text-align:center">1对</td><td style="text-align:left">对角线分布控制玄关主照明</td></tr><tr><td style="text-align:left">玄关</td><td style="text-align:center">五孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">距地30cm，路由器小夜灯(厨房正对面)</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">双控开关</td><td style="text-align:center">1对</td><td style="text-align:left">对角线布置，用于厨房主照明(可以和玄关布置在一起)</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">距地1.8m，灶台上方，预留给抽烟机</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">带开关五孔插座</td><td style="text-align:center">3个</td><td style="text-align:left">避开灶台和水槽，电饭煲，热水壶，微波炉</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">燃气热水器</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">距地30cm，冰箱侧后方冰箱用</td></tr><tr><td style="text-align:left">厨房</td><td style="text-align:center">五孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">水槽下方预留给净水器和垃圾处理器</td></tr><tr><td style="text-align:left">卫生间</td><td style="text-align:center">集成式浴霸开关</td><td style="text-align:center">1个</td><td style="text-align:left">可以控制风暖排气照明</td></tr><tr><td style="text-align:left">卫生间</td><td style="text-align:center">防水盖五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">预留给智能马桶，提前知道马桶尺寸</td></tr><tr><td style="text-align:left">卫生间</td><td style="text-align:center">开关</td><td style="text-align:center">1个</td><td style="text-align:left">卫生间照明</td></tr><tr><td style="text-align:left">餐厅</td><td style="text-align:center">开关</td><td style="text-align:center">1个</td><td style="text-align:left">餐厅主照明</td></tr><tr><td style="text-align:left">餐厅</td><td style="text-align:center">五孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">火锅、电磁炉 、手机充电、笔记本电脑</td></tr><tr><td style="text-align:left">餐厅</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">餐厅另一面墙预留空气净化器或者吸尘器</td></tr><tr><td style="text-align:left">餐厅</td><td style="text-align:center">16A三孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">预留给空调挂机</td></tr><tr><td style="text-align:left">餐厅-洗面台</td><td style="text-align:center">开关</td><td style="text-align:center">1个</td><td style="text-align:left">镜前灯</td></tr><tr><td style="text-align:left">餐厅-洗面台</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">吹风机，电动牙刷</td></tr><tr><td style="text-align:left">餐厅-洗面台</td><td style="text-align:center">五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">小厨宝</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">双控开关</td><td style="text-align:center">1对</td><td style="text-align:left">控制卧室主照明</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">开关</td><td style="text-align:center">1个</td><td style="text-align:left">控制衣柜上方轨道射灯照明</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">五孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">床头柜上方台灯、手机充电用</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">五孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">书桌上面 笔记本用，台灯用</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">五孔插座</td><td style="text-align:center">2个</td><td style="text-align:left">书桌下面 预留</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">16A三孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">距地2.0米空调挂机</td></tr><tr><td style="text-align:left">卧室</td><td style="text-align:center">五孔插座</td><td style="text-align:center">3个</td><td style="text-align:left">有限电视/挂烫机/吸尘器/空气净化器用</td></tr><tr><td style="text-align:left">阳台家务</td><td style="text-align:center">开关</td><td style="text-align:center">1个</td><td style="text-align:left">阳台主照明</td></tr><tr><td style="text-align:left">阳台家务</td><td style="text-align:center">防水盖五孔插座</td><td style="text-align:center">1个</td><td style="text-align:left">洗衣机</td></tr></tbody></table><h2 id="厨房装修"><a href="#厨房装修" class="headerlink" title="厨房装修"></a>厨房装修</h2><p>可以说厨房和卫生间的瓷砖风格直接决定了我所有的装修风格。因为一眼看中了<br> 清爽的小白砖(尺寸300*300)，所以定下了主色调白色+黑色，地砖用的灰色也算低调。厨房的水槽也是特意选了黑色。安装这个水槽的时候也是破费周折。下水口的直径是非标的(口径58mm)用不上潜水艇的防臭下水管(潜水艇适合45/56)，我买了又退，不过不得不说潜水艇的质量真心好。之后上某宝买了转接口(内58转外45)和超长下水管。<br> 安装好小米净水器的时候，发现排污口无处安放。幸好有万能的某宝，在溢水口处做了文章，分出一个口给净水器排污口。<br> 在实际使用过程中遭遇了老房子的坑，下水水流过慢过大容易漏水。我暂时用玻璃胶处理了，但是并不是很完美的方法。</p><p>厨房其他的东西都是中规中矩了。</p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/all-kitchen1.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/kitchen-1.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/kitchen-2.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/kitchen-3.jpg" alt=""></p><h2 id="卫生间篇"><a href="#卫生间篇" class="headerlink" title="卫生间篇"></a>卫生间篇</h2><p>卫生间是老房子通病，面积小的可怜不到2平米。管道外露直接影响吊顶之后的高度，马桶位移又抬高地面。卫生间绝对是最难搞且不是很满意的地方。由于面积小只安排了淋浴和马桶。将台盆移到了外面，洗衣机移到了阳台。这样勉强让卫生间的空间合理了，也做了个干湿分离。</p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/all-bathroom.jpg" alt=""></p><h2 id="餐厅篇"><a href="#餐厅篇" class="headerlink" title="餐厅篇"></a>餐厅篇</h2><p>餐厅由于做了干区洗面台，留下的空间就一张餐桌了。餐厅朝南采光挺好，原本计划是餐厅和办公用。小窗户选了百叶窗又能节省空间，可以在窗边安装个书架放放东西和书本</p><p>餐桌不能选太大的，折叠的就很好</p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/all-bathroom1.jpg" alt=""> </p><p>​                                                                                                                                                     </p><h2 id="卧室篇"><a href="#卧室篇" class="headerlink" title="卧室篇"></a>卧室篇</h2><p>卧室面积最大，订做了一个衣柜，主要不想给顶部留空间，但是做完发现怪怪的甚至有点丑，以后衣柜还是考虑成品。书桌和铁艺床都是干干净净的感觉。减去一个床头柜给卧室留下了个空间。带盖脏衣篮很方便懒人可以随时移动 ，盖上盖子假装脏衣服都消失了。</p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/all-bedroom.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/bedroom-5.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/bedroom-3.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/bedroom-2.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/bedroom-4.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/bedroom-6.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/bedroom-1.jpg" alt=""></p><p><img src="http://okn6xxp76.bkt.clouddn.com/house/bedroom-7.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  40平老破小出租房变身清爽一居室。由于本人资金匮乏加上半个颜控，还要面对顽固的反对派，所以这注定是一个不太完美并且艰辛的装修之旅。&lt;br&gt;
    
    </summary>
    
    
      <category term="生活" scheme="https://liuchao0704.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>ng-repeat下ng-model与对象拷贝的简单分析</title>
    <link href="https://liuchao0704.github.io/2017/03/09/ngRepeat/"/>
    <id>https://liuchao0704.github.io/2017/03/09/ngRepeat/</id>
    <published>2017-03-09T12:27:36.000Z</published>
    <updated>2017-12-30T12:32:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ng-model绑定到-parent上"><a href="#ng-model绑定到-parent上" class="headerlink" title="ng-model绑定到$parent上"></a>ng-model绑定到$parent上</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">ng-bind</span>=<span class="string">"radio"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in records"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"radio"</span> <span class="attr">ng-model</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;x&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">ng-bind</span>=<span class="string">"x"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当我们选中单选框的时候发现并没有想预期一样显示<code>ng-model</code>的值。这是因为处在<code>ng-repeat</code>之间的代码，对全局的<code>$scope</code>里变量的内容是不可见的，像<code></code>不是全局<code>$scope</code>里的成员。而是为<code>ng-repeat</code>创建的子<code>scope</code>里面的。所以要引用全局<code>$scope</code>里的成员，你可以使用<code>$parent</code>来引用全局的<code>$scope</code>,修改如下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">ng-bind</span>=<span class="string">"radio"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"radio"</span> <span class="attr">ng-model</span>=<span class="string">"$parent.radio"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;x&#125;&#125;"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这次点击input单选框，绑定的值就能显示了。</p><h2 id="ng-model绑定到对象的属性上"><a href="#ng-model绑定到对象的属性上" class="headerlink" title="ng-model绑定到对象的属性上"></a>ng-model绑定到对象的属性上</h2><p>这次我们将ng-model 绑定到对象上的属性下面，此时不用$parent 也能显示ng-model了<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">ng-bind</span>=<span class="string">"radio2.radio"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in records"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"radio2"</span> <span class="attr">ng-model</span>=<span class="string">"radio2.radio"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;x&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">ng-bind</span>=<span class="string">"x"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>原理分析<br>根据js对象是属于引用类型的特点来将值绑定在对象的属性上，实现了自动更新。</p><h2 id="angular下的对象拷贝"><a href="#angular下的对象拷贝" class="headerlink" title="angular下的对象拷贝"></a>angular下的对象拷贝</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">angular.copy(source, [destination]);</span><br></pre></td></tr></table></figure><ul><li>复制一个对象或者一个数组（好吧，万物皆对象，数组也是一个对象）。 </li><li>如果省略了destination，一个新的对象或数组将会被创建出来;</li><li>如果提供了destination，则source对象中的所有元素和属性都会被复制到destination中</li><li>如果source不是对象或数组（例如是null或undefined）, 则返回source;</li><li>如果source和destination类型不一致，则会抛出异常。 注意：这个是单纯复制覆盖，不是类似继承。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ng-model绑定到-parent上&quot;&gt;&lt;a href=&quot;#ng-model绑定到-parent上&quot; class=&quot;headerlink&quot; title=&quot;ng-model绑定到$parent上&quot;&gt;&lt;/a&gt;ng-model绑定到$parent上&lt;/h2&gt;&lt;figu
      
    
    </summary>
    
    
      <category term="angular" scheme="https://liuchao0704.github.io/tags/angular/"/>
    
      <category term="对象" scheme="https://liuchao0704.github.io/tags/%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Angular 表单验证</title>
    <link href="https://liuchao0704.github.io/2017/02/28/form/"/>
    <id>https://liuchao0704.github.io/2017/02/28/form/</id>
    <published>2017-02-28T14:02:20.000Z</published>
    <updated>2017-12-30T07:36:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>form表单提交之前的验证操作以及对form表单中单选框和多选框的值获取<br><a id="more"></a></p><h2 id="Form-表单的状态"><a href="#Form-表单的状态" class="headerlink" title="Form 表单的状态"></a>Form 表单的状态</h2><table><thead><tr><th style="text-align:left">属性类</th><th style="text-align:left"></th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">$valid</td><td style="text-align:left">ng-valid</td><td style="text-align:left">Boolean 告诉我们这一项当前基于你设定的规则是否验证通过</td></tr><tr><td style="text-align:left">$invalid</td><td style="text-align:left">ng-invalid</td><td style="text-align:left">Boolean 告诉我们这一项当前基于你设定的规则是否验证未通过</td></tr><tr><td style="text-align:left">$pristine</td><td style="text-align:left">ng-pristine</td><td style="text-align:left">Boolean 如果表单或者输入框没有使用则为True</td></tr><tr><td style="text-align:left">$dirty</td><td style="text-align:left">ng-dirty</td><td style="text-align:left">Boolean 如果表单或者输入框有使用到则为True</td></tr></tbody></table><h2 id="设置Form表单"><a href="#设置Form表单" class="headerlink" title="设置Form表单"></a>设置Form表单</h2><p>如果我们使用 novalidate 将不使用html5的表单验证而是使用我们自己的验证<br>注意我们把表单提交事件绑定到form的ng-submit上并且判断表单是否合法<code>userForm.$valid</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"useform"</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">novalidate</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">autocomplete</span>=<span class="string">"off"</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">ng-submit</span>=<span class="string">"userForm.$valid &amp;&amp; submitForm()"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- form 表单一定要有name属性 通过name属性访问表单 input也是如此 同时关闭表单自动填充以及h5 浏览器自带验证方法 --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="当表单不合法禁用提交按钮"><a href="#当表单不合法禁用提交按钮" class="headerlink" title="当表单不合法禁用提交按钮"></a>当表单不合法禁用提交按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger m-t"</span> <span class="attr">ng-disabled</span>=<span class="string">"useform.$invalid"</span>&gt;</span>提交!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="重置表单-清除-dirty样式"><a href="#重置表单-清除-dirty样式" class="headerlink" title="重置表单 (清除$dirty样式)"></a>重置表单 (清除$dirty样式)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$scope.menuForm.$setPristine();  </span><br><span class="line">$scope.menuForm.$setUntouched();</span><br></pre></td></tr></table></figure><h2 id="input-必填-最长-最短-正则匹配"><a href="#input-必填-最长-最短-正则匹配" class="headerlink" title="input 必填/最长/最短/正则匹配"></a>input 必填/最长/最短/正则匹配</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span> &gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> </span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">"form-control"</span> </span></span><br><span class="line"><span class="tag">                  <span class="attr">name</span>=<span class="string">"name"</span> </span></span><br><span class="line"><span class="tag">                  <span class="attr">ng-required</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">ng-model</span>=<span class="string">"formData.name"</span> </span></span><br><span class="line"><span class="tag">                  <span class="attr">ng-minlength</span>=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">ng-maxlength</span>=<span class="string">"8"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">ng-pattern</span>=<span class="string">"/^[a-zA-Z]+$/"</span></span></span><br><span class="line"><span class="tag">                  &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用ng-show来显示错误信息"><a href="#使用ng-show来显示错误信息" class="headerlink" title="使用ng-show来显示错误信息"></a>使用ng-show来显示错误信息</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$dirty &amp;&amp; useform.name.$invalid"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$error.minlength"</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span></span><br><span class="line">      名字太短.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$error.maxlength"</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span></span><br><span class="line">    名字太长.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$error.required"</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span></span><br><span class="line">    名字是必填的.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$error.pattern"</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span></span><br><span class="line">    名字只能是字母.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用ng-class-给表单添加错误样式"><a href="#使用ng-class-给表单添加错误样式" class="headerlink" title="使用ng-class 给表单添加错误样式"></a>使用ng-class 给表单添加错误样式</h2><p>因为我们使用了 Bootstrap, 我们将就使用它们提供的类(has-error). 这样就能围绕我们的form-group获得漂亮的错误信息和颜色.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span> <span class="attr">ng-class</span>=<span class="string">"&#123;'has-error':useform.name.$dirty &amp;&amp; (useform.name.$invalid || useform.$submitted)&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="input-checkbox-多选框"><a href="#input-checkbox-多选框" class="headerlink" title="input[checkbox] 多选框"></a>input[checkbox] 多选框</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- MULTIPLE CHECKBOXES --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Favorite Colors<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"favoriteColors"</span> <span class="attr">ng-model</span>=<span class="string">"formData.favoriteColors.red"</span>&gt;</span> Red</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"favoriteColors"</span> <span class="attr">ng-model</span>=<span class="string">"formData.favoriteColors.blue"</span>&gt;</span> Blue</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"favoriteColors"</span> <span class="attr">ng-model</span>=<span class="string">"formData.favoriteColors.green"</span>&gt;</span> Green</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当选择多选框的时候把formData.favoriteColors打印出来</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"favoriteColors"</span>:&#123;<span class="string">"red"</span>:<span class="literal">true</span>,<span class="string">"blue"</span>:<span class="literal">true</span>,<span class="string">"green"</span>:<span class="literal">true</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="input-checkbox-添加-value-属性"><a href="#input-checkbox-添加-value-属性" class="headerlink" title="input[checkbox] 添加 value 属性"></a>input[checkbox] 添加 value 属性</h3><p>如果我们不想简单的设置checkoxs上ng-model为true或者false,而是希望ng-model能和checkbox 上的value绑定，那该如何绑定呢？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"favoriteColors"</span> <span class="attr">ng-model</span>=<span class="string">"formData.favoriteColors.red"</span> <span class="attr">value</span>=<span class="string">"red"</span>&gt;</span> Red</span><br></pre></td></tr></table></figure><p>我在 vaule上尝试写了个值,打印输出一下看看,结果还是true、false切换并没有达到我们想要的效果，看来checkbox的值绑定需要用到其他方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"favoriteColors"</span>:&#123;<span class="string">"red"</span>:<span class="literal">true</span>,<span class="string">"blue"</span>:<span class="literal">true</span>,<span class="string">"green"</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure><p>原因是当未设置ngTrueValue和ngFalseValue时，checkbox默认值是true和false。<br>如果给checkbox 赋ngTrueValue和ngFalseValue值,那么就能使用我们自定义的值了。请注意字符串添加单引号否则会报错</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- CUSTOM VALUE CHECKBOXES --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Personal Question<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"awesome"</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">ng-model</span>=<span class="string">"formData.awesome"</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">ng-true-value</span>=<span class="string">" 'ofCourse'"</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">ng-false-value</span>=<span class="string">" 'iWish' "</span>&gt;</span></span><br><span class="line">        Are you awesome?</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当选择多选框的时候把formData.awesome打印出来</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"awesome"</span>:<span class="string">"ofCourse"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="input-radio-单选框"><a href="#input-radio-单选框" class="headerlink" title="input[radio] 单选框"></a>input[radio] 单选框</h2><ol><li>value 选择中时的值</li><li>ngValue 选择中时的值（表达式）</li><li>ngchange model更新触发 没有required属性，没办法做必填校验，所以最好初始化的时候默认选中一个。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Chicken or the Egg?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"chickenEgg"</span> <span class="attr">value</span>=<span class="string">"chicken"</span> <span class="attr">ng-model</span>=<span class="string">"formData.chickenEgg"</span>&gt;</span> Chicken</span><br><span class="line">         <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"chickenEgg"</span> <span class="attr">value</span>=<span class="string">"egg"</span> <span class="attr">ng-model</span>=<span class="string">"formData.chickenEgg"</span>&gt;</span> Egg</span><br><span class="line">         <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 选中egg把值先打印出来</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"chickenEgg"</span>:<span class="string">"egg"</span></span><br></pre></td></tr></table></figure><h3 id="扩展1：input-radio-控制-input的-disable-属性"><a href="#扩展1：input-radio-控制-input的-disable-属性" class="headerlink" title="扩展1：input[radio] 控制 input的 disable 属性"></a>扩展1：input[radio] 控制 input的 disable 属性</h3><p>场景:如果单选框选择true,则只有true对应的输入框属性可以编辑,如果单选框选择false,则只有false对应的输入框属性可以编辑。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">div&gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-disabled</span>=<span class="string">"formData.chickenEgg == 'egg'"</span> <span class="attr">ng-required</span>=<span class="string">"formData.chickenEgg == 'chicken'"</span> <span class="attr">value</span>=<span class="string">"chicken"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-disabled</span>=<span class="string">"formData.chickenEgg == 'chicken'"</span> <span class="attr">ng-required</span>=<span class="string">"formData.chickenEgg == 'egg'"</span> <span class="attr">value</span>=<span class="string">"egg"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="扩展2：ng-repeat下input-radio-的ng-model"><a href="#扩展2：ng-repeat下input-radio-的ng-model" class="headerlink" title="扩展2：ng-repeat下input[radio]的ng-model"></a>扩展2：ng-repeat下input[radio]的ng-model</h3><p>详见 <a href="https://liuchao0704.github.io/2017/03/09/ngRepeat/">https://liuchao0704.github.io/2017/03/09/ngRepeat/</a></p><h3 id="扩展3：angular动态控制checkbox全选与取消全选"><a href="#扩展3：angular动态控制checkbox全选与取消全选" class="headerlink" title="扩展3：angular动态控制checkbox全选与取消全选"></a>扩展3：angular动态控制checkbox全选与取消全选</h3><p>详见 <a href="https://liuchao0704.github.io/2017/04/10/multiselect/">https://liuchao0704.github.io/2017/04/10/multiselect/</a></p><h2 id="下拉框-Select-值是动态生成的"><a href="#下拉框-Select-值是动态生成的" class="headerlink" title="下拉框 Select 值是动态生成的"></a>下拉框 Select 值是动态生成的</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"formData.selected"</span> <span class="attr">ng-options</span>=<span class="string">"x.id as x.name for x in users"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="comment">&lt;!-- 替换空白--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$scope.users = [</span><br><span class="line">        &#123;<span class="attr">name</span>:<span class="string">'a'</span>,<span class="attr">id</span>:<span class="string">'1'</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">name</span>:<span class="string">'b'</span>,<span class="attr">id</span>:<span class="string">'2'</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">name</span>:<span class="string">'c'</span>,<span class="attr">id</span>:<span class="string">'3'</span>&#125;</span><br><span class="line">    ];</span><br><span class="line">$scope.formData = &#123;</span><br><span class="line">      selected:<span class="string">'2'</span>,</span><br><span class="line">      chickenEgg:<span class="string">'egg'</span></span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure><h3 id="提交Form表单"><a href="#提交Form表单" class="headerlink" title="提交Form表单"></a>提交Form表单</h3><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$scope.submitForm = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> param = &#123;</span><br><span class="line">           name:$scope.formData.name</span><br><span class="line">        &#125;;</span><br><span class="line">         </span><br><span class="line">       $http(&#123; </span><br><span class="line">        url:<span class="string">'api/test.js'</span>, </span><br><span class="line">        method:<span class="string">'post'</span>,</span><br><span class="line">        data:param</span><br><span class="line">         &#125;).success(<span class="function"><span class="keyword">function</span>(<span class="params">data,header,config,status</span>)</span>&#123; &#125;)</span><br><span class="line">         .error(<span class="function"><span class="keyword">function</span>(<span class="params">data,header,config,status</span>)</span>&#123;&#125;);</span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure><p>点击提交的时候，查看提交头<br><img src="http://okn6xxp76.bkt.clouddn.com/http/http.png" alt="mark"></p><h2 id="提交含有文件的Form-表单"><a href="#提交含有文件的Form-表单" class="headerlink" title="提交含有文件的Form 表单"></a>提交含有文件的Form 表单</h2><p>当form表单中有文件提交的时候，请求设置有些不同，因为是通过anjularjs的http请求来上传文件的，所以要让当前的request成为一个Multipart/form-data请求。</p><p>anjularjs对于post和get请求默认的Content-Type header 是application/json。通过设置‘Content-Type’: undefined，这样浏览器不仅帮我们把Content-Type 设置为 multipart/form-data，还填充上当前的boundary，如果你手动设置为： ‘Content-Type’: multipart/form-data，后台会抛出异常：the current request boundary parameter is null。 </p><p>ps：通过设置 transformRequest: angular.identity ，anjularjs transformRequest function 将序列化我们的formdata object.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fd = <span class="keyword">new</span> FormData();</span><br><span class="line"><span class="keyword">var</span> file1 = <span class="built_in">document</span>.querySelector(<span class="string">'input[name=file]'</span>).files[<span class="number">0</span>];</span><br><span class="line">fd.append(<span class="string">'logo1'</span>, file1);</span><br><span class="line">$http(&#123;</span><br><span class="line">  method:<span class="string">"POST"</span>,</span><br><span class="line">  url:<span class="string">"api/test.js"</span>,</span><br><span class="line">  data:fd,</span><br><span class="line">  headers:&#123;</span><br><span class="line">  <span class="string">"Content-Type"</span>: <span class="literal">undefined</span></span><br><span class="line">  &#125;,</span><br><span class="line">  transformRequest: angular.identity</span><br><span class="line">  &#125;).success(<span class="function"><span class="keyword">function</span>(<span class="params">data,header,config,status</span>)</span>&#123; &#125;)</span><br><span class="line">    .error(<span class="function"><span class="keyword">function</span>(<span class="params">data,header,config,status</span>)</span>&#123;&#125;);</span><br></pre></td></tr></table></figure><p>ps:上面的file的获取还可以通过：var file = $scope.myFile.同时要注意在js中 data: fd,不能像普通的参数一样写为：params：{ fd，…}，<br>在GET方法中可以使用params ，在POST/PUT/PATCH/DELETE中不能使用params 来传递数据，要使用data来传递。<br>参考：<a href="http://blog.csdn.net/wei389083222/article/details/51289704" target="_blank" rel="noopener">http://blog.csdn.net/wei389083222/article/details/51289704</a><br><img src="http://okn6xxp76.bkt.clouddn.com/http/http2.png" alt="mark"></p><p>完整代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"http://cdn.static.runoob.com/libs/bootstrap/3.3.7/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.static.runoob.com/libs/angular.js/1.4.6/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">"formApp"</span> <span class="attr">ng-controller</span>=<span class="string">"formController"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-10 col-sm-offset-1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Angular Checkboxes and Radio Buttons<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"useform"</span> <span class="attr">novalidate</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">ng-submit</span>=<span class="string">"userForm.$valid &amp;&amp; submitForm()"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- NAME INPUT --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span> <span class="attr">ng-class</span>=<span class="string">"&#123;'has-error':useform.name.$dirty &amp;&amp; useform.name.$invalid&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">required</span> <span class="attr">ng-model</span>=<span class="string">"formData.name"</span> <span class="attr">ng-minlength</span>=<span class="string">"3"</span> <span class="attr">ng-maxlength</span>=<span class="string">"8"</span> <span class="attr">ng-pattern</span>=<span class="string">"/^[a-zA-Z]+$/"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$dirty &amp;&amp; useform.name.$invalid"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$error.minlength"</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span></span><br><span class="line">                        名字太短.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$error.maxlength"</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span></span><br><span class="line">                        名字太长.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$error.required"</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span>名字是必填的.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">ng-show</span>=<span class="string">"useform.name.$error.pattern"</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span></span><br><span class="line">                        名字只能是字母.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- =============================================== --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- ALL OUR CHECKBOXES AND RADIO BOXES WILL GO HERE --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- =============================================== --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- SUBMIT BUTTON (DOESNT DO ANYTHING) --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">style</span>=<span class="string">"margin-bottom: 15px;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger m-t"</span> <span class="attr">ng-disabled</span>=<span class="string">"useform.$invalid"</span>&gt;</span>提交!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- MULTIPLE CHECKBOXES --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Favorite Colors<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"favoriteColors"</span> <span class="attr">ng-model</span>=<span class="string">"formData.favoriteColors.red"</span> <span class="attr">value</span>=<span class="string">"red"</span>&gt;</span> Red</span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"favoriteColors"</span> <span class="attr">ng-model</span>=<span class="string">"formData.favoriteColors.blue"</span> <span class="attr">value</span>=<span class="string">"blue"</span>&gt;</span> Blue</span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"favoriteColors"</span> <span class="attr">ng-model</span>=<span class="string">"formData.favoriteColors.green"</span> <span class="attr">value</span>=<span class="string">"green"</span>&gt;</span> Green</span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- CUSTOM VALUE CHECKBOXES --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Personal Question<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"awesome"</span> <span class="attr">ng-model</span>=<span class="string">"formData.awesome"</span> <span class="attr">ng-checked</span>=<span class="string">"formData.awesome"</span> <span class="attr">ng-true-value</span>=<span class="string">" 'ofCourse'"</span> <span class="attr">ng-false-value</span>=<span class="string">" 'iWish' "</span>&gt;</span> Are you awesome?</span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            RADIO BUTTONS</span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Chicken or the Egg?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"chickenEgg"</span> <span class="attr">value</span>=<span class="string">"chicken"</span> <span class="attr">ng-model</span>=<span class="string">"formData.chickenEgg"</span>&gt;</span> Chicken</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"chickenEgg"</span> <span class="attr">value</span>=<span class="string">"egg"</span> <span class="attr">ng-model</span>=<span class="string">"formData.chickenEgg"</span>&gt;</span> Egg</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-disabled</span>=<span class="string">"formData.chickenEgg == 'egg'"</span> <span class="attr">ng-required</span>=<span class="string">"formData.chickenEgg == 'chicken'"</span> <span class="attr">value</span>=<span class="string">"chicken"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-disabled</span>=<span class="string">"formData.chickenEgg == 'chicken'"</span> <span class="attr">ng-required</span>=<span class="string">"formData.chickenEgg == 'egg'"</span> <span class="attr">value</span>=<span class="string">"egg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"formData.selected"</span> <span class="attr">ng-options</span>=<span class="string">"x.id as x.name for x in users"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                替换空白</span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- SHOW OFF OUR FORMDATA OBJECT --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Sample Form Object<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">        &#123;&#123; formData &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> formApp = angular.module(<span class="string">'formApp'</span>, []);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    formApp.controller(<span class="string">'formController'</span>, <span class="function"><span class="keyword">function</span><span class="params">($scope, $http)</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">        $scope.users = [&#123;</span></span><br><span class="line"><span class="actionscript">            name: <span class="string">'a'</span>,</span></span><br><span class="line"><span class="actionscript">            id: <span class="string">'1'</span></span></span><br><span class="line"><span class="undefined">        &#125;, &#123;</span></span><br><span class="line"><span class="actionscript">            name: <span class="string">'b'</span>,</span></span><br><span class="line"><span class="actionscript">            id: <span class="string">'2'</span></span></span><br><span class="line"><span class="undefined">        &#125;, &#123;</span></span><br><span class="line"><span class="actionscript">            name: <span class="string">'c'</span>,</span></span><br><span class="line"><span class="actionscript">            id: <span class="string">'3'</span></span></span><br><span class="line"><span class="undefined">        &#125;];</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// we will store our form data in this object</span></span></span><br><span class="line"><span class="undefined">        $scope.formData = &#123;</span></span><br><span class="line"><span class="actionscript">            selected: <span class="string">'2'</span>,</span></span><br><span class="line"><span class="actionscript">            chickenEgg: <span class="string">'egg'</span></span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        $scope.submitForm = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">            /*  var param = &#123;</span></span><br><span class="line"><span class="undefined">                 name:$scope.formData.name</span></span><br><span class="line"><span class="undefined">              &#125;;</span></span><br><span class="line"><span class="undefined">               </span></span><br><span class="line"><span class="undefined">             $http(&#123; </span></span><br><span class="line"><span class="actionscript">              url:<span class="string">'api/test.js'</span>, </span></span><br><span class="line"><span class="actionscript">              method:<span class="string">'post'</span>,</span></span><br><span class="line"><span class="undefined">              data:param</span></span><br><span class="line"><span class="actionscript">               &#125;).success(<span class="function"><span class="keyword">function</span><span class="params">(data,header,config,status)</span></span>&#123; &#125;)</span></span><br><span class="line"><span class="actionscript">               .error(<span class="function"><span class="keyword">function</span><span class="params">(data,header,config,status)</span></span>&#123;&#125;);*/</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> fd = <span class="keyword">new</span> FormData();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> file1 = <span class="built_in">document</span>.querySelector(<span class="string">'input[name=file]'</span>).files[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">            fd.append(<span class="string">'logo1'</span>, file1);</span></span><br><span class="line"><span class="undefined">            $http(&#123;</span></span><br><span class="line"><span class="actionscript">                    method: <span class="string">"POST"</span>,</span></span><br><span class="line"><span class="actionscript">                    url: <span class="string">"api/test.js"</span>,</span></span><br><span class="line"><span class="undefined">                    data: fd,</span></span><br><span class="line"><span class="undefined">                    headers: &#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"Content-Type"</span>: <span class="literal">undefined</span></span></span><br><span class="line"><span class="undefined">                    &#125;,</span></span><br><span class="line"><span class="undefined">                    transformRequest: angular.identity</span></span><br><span class="line"><span class="actionscript">                &#125;).success(<span class="function"><span class="keyword">function</span><span class="params">(data, header, config, status)</span> </span>&#123;&#125;)</span></span><br><span class="line"><span class="actionscript">                .error(<span class="function"><span class="keyword">function</span><span class="params">(data, header, config, status)</span> </span>&#123;&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;form表单提交之前的验证操作以及对form表单中单选框和多选框的值获取&lt;br&gt;
    
    </summary>
    
    
      <category term="angular" scheme="https://liuchao0704.github.io/tags/angular/"/>
    
      <category term="form" scheme="https://liuchao0704.github.io/tags/form/"/>
    
  </entry>
  
  <entry>
    <title>Cookie/localStroage/sessionStorage 本地化存储简单分析比较</title>
    <link href="https://liuchao0704.github.io/2017/02/15/cookie/"/>
    <id>https://liuchao0704.github.io/2017/02/15/cookie/</id>
    <published>2017-02-15T14:07:18.000Z</published>
    <updated>2017-12-30T06:43:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>分析cookie localStroage sessionStorage 之间的特点选择更适合的方式来存储页面之间的交换信息。<br><a id="more"></a></p><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>优点：历史悠久,浏览器支持率高。但是cookie在存储空间上有一些限制。</p><table><thead><tr><th style="text-align:left">浏览器</th><th style="text-align:center">cookie个数（每个域名）</th><th style="text-align:center">单个cookie容量限制</th></tr></thead><tbody><tr><td style="text-align:left">Microsoft</td><td style="text-align:center">50个</td><td style="text-align:center">4KB左右(包括name、value和等号)</td></tr><tr><td style="text-align:left">Firefox</td><td style="text-align:center">50个</td><td style="text-align:center">4KB左右(包括name、value和等号)</td></tr><tr><td style="text-align:left">Opera</td><td style="text-align:center">30个</td><td style="text-align:center">4KB左右(包括name、value和等号)</td></tr><tr><td style="text-align:left">Chrome</td><td style="text-align:center">53个</td><td style="text-align:center">4KB左右(包括name、value和等号)</td></tr></tbody></table><h3 id="Cookie-4-个属性"><a href="#Cookie-4-个属性" class="headerlink" title="Cookie 4 个属性"></a>Cookie 4 个属性</h3><ol><li><p>cookie的生存期属性:expires;默认情况下,cookie只在浏览器会话期存在.退出浏览器就丢失;可以用expires设置时间;退出浏览器后就不会丢失并存为客户端浏览器的cookie文件;过了时间后cookie失效,还会自动删除cookie文件. </p></li><li><p>path属性:默认情况下,在同一个目录下文件可以调用; 例如:<code>http://demo.com/c1/1.html</code>设置的cookie可以被<code>http://demo.com/c1/2.html</code>调用.但不能被<code>http://demo.com/c2/</code>目录下的文件调用; 但如把path属性设成”/“;则在<code>http://demo.com/</code>下的所有文件都可调用此cookie.  </p></li><li><p>domain属性:例如设成”.google.com”则在.google.com下的所有服务器下的文件都可以调用cookie</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie=<span class="string">"userId=320; path=/"</span>;</span><br></pre></td></tr></table></figure></li><li><p>安全属性:默认情况下为false;用http协议不安全传输;true:用https等协议安全传输. </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie=<span class="string">"name=value; domain=cookieDomain"</span>;</span><br></pre></td></tr></table></figure></li></ol><h3 id="Cookie-设置"><a href="#Cookie-设置" class="headerlink" title="Cookie 设置"></a>Cookie 设置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie = <span class="string">'username=admin'</span></span><br><span class="line"><span class="built_in">document</span>.cookie = <span class="string">'age=17'</span>;</span><br><span class="line"><span class="built_in">document</span>.cookie=<span class="string">"username=admin; age=17"</span>; <span class="comment">//如果是多个键值对：</span></span><br></pre></td></tr></table></figure><h3 id="Cookie-函数封装"><a href="#Cookie-函数封装" class="headerlink" title="Cookie 函数封装"></a>Cookie 函数封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*添加cookie*/</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">addCookie</span>(<span class="params">name, value, days, path</span>) </span>&#123; </span><br><span class="line">        <span class="keyword">var</span> name = <span class="built_in">escape</span>(name);</span><br><span class="line">        <span class="keyword">var</span> value = <span class="built_in">escape</span>(value);</span><br><span class="line">        <span class="keyword">var</span> expires = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        expires.setTime(expires.getTime() + days * <span class="number">3600000</span> * <span class="number">24</span>);</span><br><span class="line">        <span class="comment">//path=/，表示cookie能在整个网站下使用，path=/temp，表示cookie只能在temp目录下使用</span></span><br><span class="line">        path = path == <span class="string">""</span> ? <span class="string">""</span> : <span class="string">";path="</span> + path;</span><br><span class="line">        <span class="comment">//GMT(Greenwich Mean Time)是格林尼治平时，现在的标准时间，协调世界时是UTC</span></span><br><span class="line">        <span class="comment">//参数days只能是数字型</span></span><br><span class="line">        <span class="keyword">var</span> _expires = (<span class="keyword">typeof</span> days) == <span class="string">"string"</span> ? <span class="string">""</span> : <span class="string">";expires="</span> + expires.toUTCString();</span><br><span class="line">        <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + value + _expires + path;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>执行一下函数 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addCookie(<span class="string">'cookie'</span>,<span class="number">222</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>在本地打开网页会发现Cookie,并且路径是当前文件夹下的路径</p><p> <img src="http://okn6xxp76.bkt.clouddn.com/cookie/cookie.png" alt="mark"></p><h3 id="Cookie-读取"><a href="#Cookie-读取" class="headerlink" title="Cookie 读取"></a>Cookie 读取</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> arr,reg=<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span>+name+<span class="string">"=([^;]*)(;|$)"</span>);</span><br><span class="line"><span class="keyword">if</span>(arr=<span class="built_in">document</span>.cookie.match(reg))</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Cookie-删除"><a href="#Cookie-删除" class="headerlink" title="Cookie 删除"></a>Cookie 删除</h3><p>如果设置的时候 <code>path=&#39;/xxx&#39;</code> 那么删除掉时候也要相应的添加上path</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*删除cookie*/</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">deleteCookie</span>(<span class="params">name,path</span>)</span>&#123;   <span class="comment">/**根据cookie的键，删除cookie，其实就是设置其失效**/</span></span><br><span class="line">    <span class="keyword">var</span> name = <span class="built_in">escape</span>(name);</span><br><span class="line">    <span class="keyword">var</span> expires = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">0</span>);</span><br><span class="line">    path = path == <span class="string">""</span> ? <span class="string">""</span> : <span class="string">";path="</span> + path;</span><br><span class="line">    <span class="built_in">document</span>.cookie = name + <span class="string">"="</span>+ <span class="string">";expires="</span> + expires.toUTCString() + path;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="localStroge"><a href="#localStroge" class="headerlink" title="localStroge"></a>localStroge</h2><h3 id="localStroge-设置"><a href="#localStroge-设置" class="headerlink" title="localStroge 设置"></a>localStroge 设置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localStorage.setItem(key,value);<span class="comment">//设置key 为 value</span></span><br></pre></td></tr></table></figure><h3 id="localStroge-获取"><a href="#localStroge-获取" class="headerlink" title="localStroge 获取"></a>localStroge 获取</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localStorage.getItem(key);<span class="comment">//获取key的值</span></span><br></pre></td></tr></table></figure><h3 id="localStroge-清除单个Key"><a href="#localStroge-清除单个Key" class="headerlink" title="localStroge 清除单个Key"></a>localStroge 清除单个Key</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localStorage.removeItem(key);<span class="comment">//清除key的值</span></span><br></pre></td></tr></table></figure><h3 id="localStroge-清除所有"><a href="#localStroge-清除所有" class="headerlink" title="localStroge 清除所有"></a>localStroge 清除所有</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localStorage.clear();<span class="comment">//一次性清除所有的键值对</span></span><br></pre></td></tr></table></figure><p>如果要使cookie在当前整个网站下可用,可以将cookie_dir指定为根目录,例如：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.<span class="attribute">cookie</span>=”userid=320;path=/”;</span><br></pre></td></tr></table></figure></p><p>localstorage的存储范围就是当前整个网站，不存在指定访问范围这一说。 </p><h3 id="localStroge遍历存储的数据"><a href="#localStroge遍历存储的数据" class="headerlink" title="localStroge遍历存储的数据"></a>localStroge遍历存储的数据</h3><p>当你不清楚本地localStorage存储了多少数据的时候，用key(index)方法绝对是一个不错的选择，key方法可以遍历localStorage存储的key。写个简单的例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;localStorage.length;i++)&#123;</span><br><span class="line">　　<span class="built_in">document</span>.write(localStorage.key(i)+<span class="string">":"</span>+localStorage.getItem(localStorage.key(i))+<span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="localStrogeJSON存储"><a href="#localStrogeJSON存储" class="headerlink" title="localStrogeJSON存储"></a>localStrogeJSON存储</h3><p>当需要存储的数据很多时，可以将数据存储到数组中并转换成JSON格式的数据。</p><p>JSON.stringify(data) 将对象转换成JSON格式的数据串。</p><p>JSON.parse(data)将数据解析成对象并返回解析后的对象。</p><p>这样说或许不太好懂，直接上例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = &#123;<span class="string">"name"</span>:<span class="string">"moomoo"</span>,<span class="string">"age"</span>:<span class="number">2</span>,<span class="string">"eat"</span>:<span class="string">"apple"</span>&#125;;</span><br><span class="line">localStorage.setItem(<span class="string">"arr"</span>,<span class="built_in">JSON</span>.stringify(arr));</span><br><span class="line">arr = <span class="built_in">JSON</span>.parse(localStorage.getItem(<span class="string">"arr"</span>));</span><br></pre></td></tr></table></figure><p><img src="http://okn6xxp76.bkt.clouddn.com/cookie/localstroge.png" alt="mark"></p><h3 id="sessionStorage设置"><a href="#sessionStorage设置" class="headerlink" title="sessionStorage设置"></a>sessionStorage设置</h3><p>sessionStorage 用法基本同localStroge ,但是当网页关闭重新打开的时候,sessionStorage就会清除。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sessionStorage();</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">sessionStorage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> arr = &#123;</span><br><span class="line">              <span class="string">"name"</span>: <span class="string">"pp"</span>,</span><br><span class="line">              <span class="string">"age"</span>: <span class="number">33</span>,</span><br><span class="line">              <span class="string">"eat"</span>: <span class="string">"pear"</span></span><br><span class="line">          &#125;;</span><br><span class="line">          <span class="keyword">var</span> sessionStorage = <span class="built_in">window</span>.sessionStorage; <span class="comment">// 请注意使用window.sessionStorage 否则会报错</span></span><br><span class="line">          sessionStorage.setItem(<span class="string">"yy"</span>, <span class="built_in">JSON</span>.stringify(arr));</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p><img src="http://okn6xxp76.bkt.clouddn.com/cookie/session.png" alt="mark"></p><p>下面是完整的HMTL代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>cookie 跨域和解决方案<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"http://cdn.static.runoob.com/libs/bootstrap/3.3.7/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span> cookie设置<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"set-cookie-name "</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span>&gt;</span>name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span> <span class="attr">id</span>=<span class="string">"set-cookie-name"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"set-cookie-value"</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span>&gt;</span>value<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span> <span class="attr">id</span>=<span class="string">"set-cookie-value"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"set-cookie-btn"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success col-xs-3 col-xs-offset-1 "</span>&gt;</span> 点击设置cookie</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-4 "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"col-xs-5"</span> <span class="attr">id</span>=<span class="string">"get-cookie-input"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"get-cookie-btn"</span> <span class="attr">class</span>=<span class="string">" btn btn-info col-xs-5 col-xs-offset-1"</span>&gt;</span> 获取cookie 按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-2 "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"del-cookie-btn"</span> <span class="attr">class</span>=<span class="string">" btn btn-danger col-xs-10 col-xs-offset-1"</span>&gt;</span> 删除cookie 按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-8 "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Localstroge设置<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"set-localstroge-name "</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span>&gt;</span>name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span> <span class="attr">id</span>=<span class="string">"set-localstroge-name"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"set-localstroge-value"</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span>&gt;</span>value<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span> <span class="attr">id</span>=<span class="string">"set-localstroge-value"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"set-localstroge-btn"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success col-xs-3 col-xs-offset-1 "</span>&gt;</span> 点击设置localstroge</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-4 "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"col-xs-5"</span> <span class="attr">id</span>=<span class="string">"get-localstroge-input"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"get-localstroge-btn"</span> <span class="attr">class</span>=<span class="string">" btn btn-info col-xs-5 col-xs-offset-1"</span>&gt;</span> 获取localstroge 按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-2 "</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"del-localstroge-btn"</span> <span class="attr">class</span>=<span class="string">" btn btn-danger col-xs-10 col-xs-offset-1"</span>&gt;</span> 删除localstroge 按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 "</span> <span class="attr">style</span>=<span class="string">'margin-top: 20px;'</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"del-localstroge-all-btn"</span> <span class="attr">class</span>=<span class="string">" btn btn-danger col-xs-3 col-xs-offset-2"</span>&gt;</span> 删除所有localstroge 按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"set-localstroge-arr-btn"</span> <span class="attr">class</span>=<span class="string">" btn btn-primary col-xs-3 col-xs-offset-1"</span>&gt;</span> 设置localstrogeArray按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-8 "</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Sessionstroge设置<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"set-sessionstroge-arr-btn"</span> <span class="attr">class</span>=<span class="string">" btn btn-infro col-xs-3 col-xs-offset-1"</span>&gt;</span> 设置sessionstrogeArray按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="built_in">window</span>.localStorage) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'localStorage'</span>)</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'not  support localStorage'</span>)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="built_in">window</span>.sessionStorage) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'sessionStorage'</span>)</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'not  support sessionStorage'</span>)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#set-cookie-btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> name = $(<span class="string">'#set-cookie-name'</span>).val();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> value = $(<span class="string">'#set-cookie-value'</span>).val();</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (name !== <span class="literal">null</span> &amp;&amp; value !== <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                addCookie(name, value, <span class="number">3</span>, <span class="string">'/setcookie'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#get-cookie-btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> name = $(<span class="string">'#set-cookie-name'</span>).val();</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> value = getCookie(name);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#get-cookie-input'</span>).val(value);</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#del-cookie-btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> name = $(<span class="string">'#set-cookie-name'</span>).val();</span></span><br><span class="line"><span class="undefined">            deleteCookie(name);</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#set-localstroge-btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> key = $(<span class="string">'#set-localstroge-name'</span>).val();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> value = $(<span class="string">'#set-localstroge-value'</span>).val();</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (name !== <span class="literal">null</span> &amp;&amp; value !== <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="undefined">                localStorage.setItem(key, value);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#get-localstroge-btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> key = $(<span class="string">'#set-localstroge-name'</span>).val();</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> value = localStorage.getItem(key);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#get-localstroge-input'</span>).val(value);</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#del-localstroge-btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> key = $(<span class="string">'#set-localstroge-name'</span>).val();</span></span><br><span class="line"><span class="undefined">            localStorage.removeItem(key);</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#del-localstroge-all-btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            localStorage.clear();</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#set-localstroge-arr-btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            setLocalstrogeArray();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">setLocalstrogeArray</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> arr = &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="string">"name"</span>: <span class="string">"moomoo"</span>,</span></span><br><span class="line"><span class="actionscript">                <span class="string">"age"</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="actionscript">                <span class="string">"eat"</span>: <span class="string">"apple"</span></span></span><br><span class="line"><span class="undefined">            &#125;;</span></span><br><span class="line"><span class="javascript">            localStorage.setItem(<span class="string">"arr"</span>, <span class="built_in">JSON</span>.stringify(arr));</span></span><br><span class="line"><span class="javascript">            arr = <span class="built_in">JSON</span>.parse(localStorage.getItem(<span class="string">"arr"</span>));</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(arr)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#set-sessionstroge-arr-btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            sessionStorage();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">sessionStorage</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> arr = &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="string">"name"</span>: <span class="string">"pp"</span>,</span></span><br><span class="line"><span class="actionscript">                <span class="string">"age"</span>: <span class="number">33</span>,</span></span><br><span class="line"><span class="actionscript">                <span class="string">"eat"</span>: <span class="string">"pear"</span></span></span><br><span class="line"><span class="undefined">            &#125;;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> sessionStorage = <span class="built_in">window</span>.sessionStorage;</span></span><br><span class="line"><span class="javascript">            sessionStorage.setItem(<span class="string">"yy"</span>, <span class="built_in">JSON</span>.stringify(arr));</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="comment">/*添加cookie*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">addCookie</span><span class="params">(name, value, days, path)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> name = <span class="built_in">escape</span>(name);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> value = <span class="built_in">escape</span>(value);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> expires = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="undefined">        expires.setTime(expires.getTime() + days * 3600000 * 24);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//path=/，表示cookie能在整个网站下使用，path=/temp，表示cookie只能在temp目录下使用</span></span></span><br><span class="line"><span class="actionscript">        path = path == <span class="string">""</span> ? <span class="string">""</span> : <span class="string">";path="</span> + path;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//GMT(Greenwich Mean Time)是格林尼治平时，现在的标准时间，协调世界时是UTC</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//参数days只能是数字型</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> _expires = (<span class="keyword">typeof</span> days) == <span class="string">"string"</span> ? <span class="string">""</span> : <span class="string">";expires="</span> + expires.toUTCString();</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + value + _expires + path;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="comment">/*获取cookie*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getCookie</span><span class="params">(name)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> arr, reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span> + name + <span class="string">"=([^;]*)(;|$)"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (arr = <span class="built_in">document</span>.cookie.match(reg))</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">else</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">/*删除cookie*/</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">deleteCookie</span><span class="params">(name, path)</span> </span>&#123; <span class="comment">/**根据cookie的键，删除cookie，其实就是设置其失效**/</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> name = <span class="built_in">escape</span>(name);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> expires = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="actionscript">        path = path == <span class="string">""</span> ? <span class="string">""</span> : <span class="string">";path="</span> + path;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + <span class="string">";expires="</span> + expires.toUTCString() + path;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分析cookie localStroage sessionStorage 之间的特点选择更适合的方式来存储页面之间的交换信息。&lt;br&gt;
    
    </summary>
    
    
      <category term="cookie" scheme="https://liuchao0704.github.io/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>gulp 自动化构建工具小总结</title>
    <link href="https://liuchao0704.github.io/2017/02/12/gulpAuto/"/>
    <id>https://liuchao0704.github.io/2017/02/12/gulpAuto/</id>
    <published>2017-02-12T12:32:50.000Z</published>
    <updated>2018-02-25T08:48:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用gulp一段时间了，编译less省时省力，记录一下自己的安装过程，也算是比较详细的gulp使用教程了。<br><a id="more"></a></p><h3 id="本教程使用的工具以及安装环境"><a href="#本教程使用的工具以及安装环境" class="headerlink" title="本教程使用的工具以及安装环境"></a>本教程使用的工具以及安装环境</h3><hr><ol><li>node.js </li><li>git</li><li>windows</li></ol><h3 id="完成效果"><a href="#完成效果" class="headerlink" title="完成效果"></a>完成效果</h3><hr><ol><li>自动编译less文件生成css文件</li><li>当css,js 文件发生更改的时候浏览器自动为我们刷新</li><li>清除缓存,自动为css,js添加版本号例如 <code>href=&quot;css/app.css?v=98ad83c3b4&quot;</code></li></ol><h3 id="1-安装node-js、git"><a href="#1-安装node-js、git" class="headerlink" title="1.安装node.js、git"></a>1.安装node.js、git</h3><h3 id="2-全局安装gulp"><a href="#2-全局安装gulp" class="headerlink" title="2.全局安装gulp"></a>2.全局安装gulp</h3>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp -g</span><br></pre></td></tr></table></figure><h3 id="3-本地安装-gulp"><a href="#3-本地安装-gulp" class="headerlink" title="3.本地安装 gulp"></a>3.本地安装 gulp</h3><p>老规矩E盘下新建文件夹(比如www，注意不要有中文名称)并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm init</span><br></pre></td></tr></table></figure><p>npm init命令会为你创建一个package.json文件，这个文件保存着这个项目相关信息。比如你用到的各种依赖（这里主要是插件）（终端会自动出现下面内容，这里先随便填就行）<br>创建完之后，我们执行下本地安装的命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp --save-dev</span><br></pre></td></tr></table></figure></p><p>执行完之后，node将创建node_modules文件夹，里面有个gulp文件夹。</p><h3 id="4-项目目录结构"><a href="#4-项目目录结构" class="headerlink" title="4. 项目目录结构"></a>4. 项目目录结构</h3><p><img src="http://okn6xxp76.bkt.clouddn.com/gulp/gulp-file.png" alt="mark"></p><p>在E盘/www文件夹下面我们使用app文件夹作为开发目录（所有的源文件都放在这下面），dist文件夹用来存放生产环境下的内容。这些文件名，你想怎么起都行，但请务必记住你的目录结构。现在来创建gulpfile.js。</p><h3 id="5-第一个gulp-任务"><a href="#5-第一个gulp-任务" class="headerlink" title="5. 第一个gulp 任务"></a>5. 第一个gulp 任务</h3><p>你需要先在文件根目录下创建一个gulpfile.js文件，查看一下之前的文件结构。</p><p>在文件里面输入这样的代码 <code>var gulp = require(&#39;gulp&#39;);</code>这行命令告知Node去node_modules中查找gulp包，先局部查找，找不到就去全局环境中查找。找到之后就会赋值给gulp变量，然后我们就可以使用它了。</p><p>简单的任务如下所示：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'task-name'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="comment">// Stuff here</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></p><p>task-name 是给你的任务起的名字，稍后在命令行中执行gulp task-name，将运行该任务。写个HelloWorld，是这样的：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line">  gulp.task(<span class="string">'hello'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hello World!'</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></p><p>命令行中执行：$ gulp hello</p><p>输出’Hello World!’ 表示成功了。</p><p>gulp任务通常会包含两个特定的Gulp方法和一系列Gulp插件。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'task-name'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> gulp.src(<span class="string">'source-files'</span>) <span class="comment">// Get source files with gulp.src</span></span><br><span class="line"> .pipe(aGulpPlugin()) <span class="comment">// Sends it through a gulp plugin</span></span><br><span class="line"> .pipe(gulp.dest(<span class="string">'destination'</span>)) <span class="comment">// Outputs the file in the destination folder</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="6-简单的less-任务"><a href="#6-简单的less-任务" class="headerlink" title="6.简单的less 任务"></a>6.简单的less 任务</h3><p>由于本人用的是less 所以这里讲一下less插件 。其实less 和 sass插件安装几乎是同理可得，引入插件的同时首先要安装一下插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp-less --save-dev</span><br></pre></td></tr></table></figure><p>记得在app 文件夹下有less文件夹 并且在less文件夹下面新建style.less文件。找到index.hmtl 并引入样式 <link rel="stylesheet" href="css/style.css"></p><p>打开之前的gulpfile.js  添加一下less任务</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> less = <span class="built_in">require</span>(<span class="string">'gulp-less'</span>);</span><br><span class="line">    gulp.task(<span class="string">'less'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        gulp.src([<span class="string">'app/less/style.less'</span>]) </span><br><span class="line">            .pipe(less())</span><br><span class="line">            .pipe(gulp.dest(<span class="string">'app/css'</span>)); <span class="comment">//将会在app/css下生成style.css</span></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="7-Node-通配符"><a href="#7-Node-通配符" class="headerlink" title="7. Node 通配符"></a>7. Node 通配符</h3><p>通配符是一种匹配模式，允许你匹配到多个文件。不止是Node，很多平台都有，有点像正则表达式。使用通配符，计算机检查文件名和路径进行匹配。大部分时候，我们只需要用到下面4种匹配模式：</p><ul><li><p><code>*.scss</code>： * 号匹配当前目录任意文件，所以这里 <code>*.scss</code>  匹配当前目录下所有scss文件</p></li><li><p><code>**/*.scss</code>：匹配当前目录及其子目录下的所有scss文件。</p></li><li><p><code>!not-me.scss</code>:!号移除匹配的文件，这里将移除<code>not-me.scss</code></p></li><li><p><code>*.+(scss|sass)</code> ：+号后面会跟着圆括号，里面的元素用|分割，匹配多个选项。这里将匹配scss和sass文件。</p></li></ul><p>改造一下less 任务</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'less'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> gulp.src(<span class="string">'app/less/**/*.less'</span>) </span><br><span class="line">        .pipe(less())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'app/css'</span>))</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="8-自动编译-监听任务"><a href="#8-自动编译-监听任务" class="headerlink" title="8.自动编译 监听任务"></a>8.自动编译 监听任务</h3><p>现在我们能处理多个文件了，但是不想每次都要执行命令，怎么办？Gulp就是为懒人而生的，我们可以使用watch命令，自动检测并执行。</p><p>Gulp提供watch方法给我们，语法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Gulp watch syntax</span></span><br><span class="line">    gulp.watch(<span class="string">'files-to-watch'</span>, [<span class="string">'tasks'</span>, <span class="string">'to'</span>, <span class="string">'run'</span>]);</span><br></pre></td></tr></table></figure><p>所以同时监听多个less 任务就是</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      gulp.watch(<span class="string">'app/less/**/*.less'</span>, [<span class="string">'less'</span>]);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>当编译less时出现语法错误或者其他异常，会终止watch事件，通常需要查看命令提示符窗口才能知道，这并不是我们所希望的，所以我们需要处理出现异常并不终止watch事件（gulp-plumber），并提示我们出现了错误（gulp-notify）。</p><p>安装两个新插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp-plumber --save-dev</span><br><span class="line">$ npm install gulp-notify --save-dev</span><br></pre></td></tr></table></figure><p>继续修改一下less任务<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> notify = <span class="built_in">require</span>(<span class="string">'gulp-notify'</span>);</span><br><span class="line">    <span class="keyword">var</span> plumber = <span class="built_in">require</span>(<span class="string">'gulp-plumber'</span>);</span><br><span class="line">        gulp.task(<span class="string">'less'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="keyword">return</span> gulp.src(<span class="string">'app/less/**/*.less'</span>)</span><br><span class="line">            .pipe(plumber(&#123;<span class="attr">errorHandler</span>: notify.onError(<span class="string">'Error: '</span>)&#125;))</span><br><span class="line">            .pipe(less()) </span><br><span class="line">            .pipe(gulp.dest(<span class="string">'app/css'</span>))</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure></p><h3 id="9-使用Browser-Sync自动刷新浏览器"><a href="#9-使用Browser-Sync自动刷新浏览器" class="headerlink" title="9.使用Browser Sync自动刷新浏览器"></a>9.使用Browser Sync自动刷新浏览器</h3><p>记得引入新插件首先要安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install browser-sync --save-dev</span><br></pre></td></tr></table></figure></p><p>在gulpfile.js中 新建任务<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>);</span><br></pre></td></tr></table></figure></p><p>我们创建一个broswerSync任务，我们需要告知它，根目录在哪里。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'browserSync'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     browserSync(&#123;</span><br><span class="line">       server: &#123;</span><br><span class="line">         baseDir: <span class="string">'app'</span></span><br><span class="line">       &#125;,</span><br><span class="line">     &#125;)</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><p>我们稍微修改一下之前的代码，让每次css文件更改都刷新一下浏览器：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'less'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> gulp.src(<span class="string">'app/less/**/*.less'</span>)</span><br><span class="line">        .pipe(plumber(&#123;<span class="attr">errorHandler</span>: notify.onError(<span class="string">'Error: '</span>)&#125;))</span><br><span class="line">        .pipe(less()) </span><br><span class="line">        .pipe(gulp.dest(<span class="string">'app/css'</span>))</span><br><span class="line">        .pipe(browserSync.reload(&#123;</span><br><span class="line">          stream: <span class="literal">true</span></span><br><span class="line">        &#125;))</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>现在我们配置好BroswerSync了，我们需要运行这两个命令。我们可以在watch任务之前告知gulp，先把browserSync和less任务执行了再说。 语法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'watch'</span>, [<span class="string">'array'</span>, <span class="string">'of'</span>, <span class="string">'tasks'</span>, <span class="string">'to'</span>, <span class="string">'complete'</span>,<span class="string">'before'</span>, <span class="string">'watch'</span>], <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>不止是less修改的时候需要刷新浏览器吧？js,html 改变都要刷新浏览器 ：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'watch'</span>,[<span class="string">'browserSync'</span>, <span class="string">'less'</span>],  <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      gulp.watch(<span class="string">'app/less/**/*.less'</span>, [<span class="string">'less'</span>]);</span><br><span class="line">      gulp.watch(<span class="string">'app/*.html'</span>, browserSync.reload);</span><br><span class="line">      gulp.watch(<span class="string">'app/js/**/*.js'</span>, browserSync.reload);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>好了至此我们已经完成了所有的操作。<code>$ gulp watch</code>一下就能实现自动编译less 并且根据css ,html 等文件的改变自动刷新浏览器了。</p><p>以上参考资料：</p><ul><li><a href="http://www.tuicool.com/articles/QzaqAbF" target="_blank" rel="noopener">http://www.tuicool.com/articles/QzaqAbF</a></li><li><a href="http://www.ydcss.com/archives/18" target="_blank" rel="noopener">http://www.ydcss.com/archives/18</a></li><li><a href="http://www.ydcss.com/archives/34" target="_blank" rel="noopener">http://www.ydcss.com/archives/34</a></li></ul><h3 id="10-BrowserSync-代理模式"><a href="#10-BrowserSync-代理模式" class="headerlink" title="10. BrowserSync 代理模式"></a>10. BrowserSync 代理模式</h3><p>查看一下之前的gulpfile.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'browserSync'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    browserSync(&#123;</span><br><span class="line">      server: &#123;</span><br><span class="line">        baseDir: <span class="string">'app'</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure></p><p>这个命令用于纯静态站点，也就是仅一些.html文件的情况。如果是动态站点，则使用代理模式。例如PHP站点，已经建立了一个本地服务器如<code>http://localhost:8080</code>，此时会是这样的命令，我们来做个修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'browserSync'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      browserSync(&#123;</span><br><span class="line">        proxy: <span class="string">"http://localhost:8080/xxx/app/"</span>  <span class="comment">//这个xxx文件夹稍后根据实际情况而定</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>这样手机也可以访问电脑里面的网站了 <code>$ gulp watch</code>一下 电脑、手机端可以自动刷新了。最后分享一下 gulpfile.js 代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">        less = <span class="built_in">require</span>(<span class="string">'gulp-less'</span>),</span><br><span class="line">        notify = <span class="built_in">require</span>(<span class="string">'gulp-notify'</span>),</span><br><span class="line">        plumber = <span class="built_in">require</span>(<span class="string">'gulp-plumber'</span>),</span><br><span class="line">        browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>);</span><br><span class="line">    gulp.task(<span class="string">'hello'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World!'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    gulp.task(<span class="string">'less'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> gulp.src(<span class="string">'app/less/**/*.less'</span>)</span><br><span class="line">        .pipe(plumber(&#123;<span class="attr">errorHandler</span>: notify.onError(<span class="string">'Error: '</span>)&#125;))</span><br><span class="line">        .pipe(less()) </span><br><span class="line">        .pipe(gulp.dest(<span class="string">'app/css'</span>))</span><br><span class="line">        .pipe(browserSync.reload(&#123;</span><br><span class="line">          stream: <span class="literal">true</span></span><br><span class="line">        &#125;))</span><br><span class="line">    &#125;);</span><br><span class="line">    gulp.task(<span class="string">'watch'</span>,[<span class="string">'browserSync'</span>, <span class="string">'less'</span>],  <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      gulp.watch(<span class="string">'app/less/**/*.less'</span>, [<span class="string">'less'</span>]);</span><br><span class="line">      gulp.watch(<span class="string">'app/*.html'</span>, browserSync.reload);</span><br><span class="line">      gulp.watch(<span class="string">'app/js/**/*.js'</span>, browserSync.reload);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// Browser-sync task, only cares about compiled CSS</span></span><br><span class="line">    gulp.task(<span class="string">'browserSync'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      browserSync(&#123;</span><br><span class="line">        proxy: <span class="string">"http://127.0.0.1/xxx/app/"</span> <span class="comment">//xxx 根据实际情况而定</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="11-自动为css，js-增加版本号"><a href="#11-自动为css，js-增加版本号" class="headerlink" title="11.自动为css，js 增加版本号"></a>11.自动为css，js 增加版本号</h3><p>gulp 在原html文件上自动化添加js、css版本号原理</p><ol><li><p>修改js和css文件</p></li><li><p>通过对js,css文件内容进行hash运算，生成一个文件的唯一hash字符串(如果文件修改则hash号会发生变化)</p></li><li><p>替换html中的js,css文件名，生成一个带版本号的文件名</p></li></ol><p>原html文件代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/default.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/app.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>预期效果：在原目录结构下html文件代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/default.css?v=5a636d79c4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/app.js?v=3a0d844594"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev gulp-rev</span><br><span class="line">npm install --save-dev gulp-rev-collector</span><br><span class="line">npm install --save-dev run-sequence</span><br></pre></td></tr></table></figure><p>继续修改gulpfile.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入gulp和gulp插件</span></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    runSequence = <span class="built_in">require</span>(<span class="string">'run-sequence'</span>),</span><br><span class="line">    rev = <span class="built_in">require</span>(<span class="string">'gulp-rev'</span>),</span><br><span class="line">    revCollector = <span class="built_in">require</span>(<span class="string">'gulp-rev-collector'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义css、js源文件路径</span></span><br><span class="line"><span class="keyword">var</span> cssSrc = <span class="string">'css/*.css'</span>,</span><br><span class="line">    jsSrc = <span class="string">'js/*.js'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//CSS生成文件hash编码并生成 rev-manifest.json文件名对照映射</span></span><br><span class="line">gulp.task(<span class="string">'revCss'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(cssSrc)</span><br><span class="line">        .pipe(rev())</span><br><span class="line">        .pipe(rev.manifest())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'rev/css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//js生成文件hash编码并生成 rev-manifest.json文件名对照映射</span></span><br><span class="line">gulp.task(<span class="string">'revJs'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(jsSrc)</span><br><span class="line">        .pipe(rev())</span><br><span class="line">        .pipe(rev.manifest())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'rev/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Html替换css、js文件版本</span></span><br><span class="line">gulp.task(<span class="string">'revHtml'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'rev/**/*.json'</span>, <span class="string">'View/*.html'</span>])<span class="comment">//views是本地html文件的路径，可自行配置*/</span></span><br><span class="line">        .pipe(revCollector())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'View'</span>));<span class="comment">///*Html更换css、js文件版本,WEB-INF/views也是和本地html文件的路径一致*/</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//开发构建</span></span><br><span class="line">gulp.task(<span class="string">'dev'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">done</span>) </span>&#123;</span><br><span class="line">    condition = <span class="literal">false</span>;</span><br><span class="line">    runSequence(</span><br><span class="line">        [<span class="string">'revCss'</span>],</span><br><span class="line">        [<span class="string">'revJs'</span>],</span><br><span class="line">        [<span class="string">'revHtml'</span>],</span><br><span class="line">        done);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'dev'</span>]);</span><br></pre></td></tr></table></figure><p>执行gulp命令后的效果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//rev目录下生成了manifest.json对应文件</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"default.css"</span>: <span class="string">"default-803a7fe4ae.css"</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"../css/default-803a7fe4ae.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"../js/app-3a0d844594.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>很显然这不是我们需要的效果,所以我们要继续修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开node_modules\gulp-rev\index.js</span><br><span class="line">第<span class="number">144</span>行 manifest[originalFile] = revisionedFile;</span><br><span class="line">更新为: manifest[originalFile] = originalFile + <span class="string">'?v='</span> + file.revHash;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开nodemodules\rev-path\index.js</span><br><span class="line">第<span class="number">10</span>行 <span class="keyword">return</span> filename + <span class="string">'-'</span> + hash + ext;</span><br><span class="line">更新为: <span class="keyword">return</span> filename + ext;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开node_modules\gulp-rev-collector\index.js</span><br><span class="line">第<span class="number">31</span>行<span class="keyword">if</span> ( !_.isString(json[key]) || path.basename(json[key]).replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>( opts.revSuffix ), <span class="string">' '</span>) !==  path.basename(key) ) &#123;</span><br><span class="line">更新为: <span class="keyword">if</span> ( !_.isString(json[key]) || path.basename(json[key]).split(<span class="string">'?'</span>)[<span class="number">0</span>] !== path.basename(key) ) &#123;</span><br></pre></td></tr></table></figure><p>再执行gulp命令，得到的结果如下(效果正确):</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/default.css?v=33379df310?v=803a7fe4ae"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/app.js?v=3a0d844594?v=3a0d844594"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有没有发现，会在版本号后面再添加一个版本号，因为gulp只替换了原来文件名，这样又不符合预期效果了，所以我们想到，还需要修改插件的替换正则表达式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开node_modules\gulp-rev-collector\index.js</span><br><span class="line">第<span class="number">117</span>行 regexp: <span class="keyword">new</span> <span class="built_in">RegExp</span>( <span class="string">'([\/\\\\\'"])'</span> + pattern, <span class="string">'g'</span> ),</span><br><span class="line">更新为: regexp: <span class="keyword">new</span> <span class="built_in">RegExp</span>( <span class="string">'([\/\\\\\'"])'</span> + pattern+<span class="string">'(\\?v=\\w&#123;10&#125;)?'</span>, <span class="string">'g'</span> ),</span><br></pre></td></tr></table></figure><p>现在你不管执行多少遍gulp命令，得到的html效果都是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/default.css?v=5a636d79c4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/app.js?v=3a0d844594"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上参考资料：<a href="https://my.oschina.net/enjoymore/blog/830622" target="_blank" rel="noopener">https://my.oschina.net/enjoymore/blog/830622</a></p><p>最后分享一下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    less = <span class="built_in">require</span>(<span class="string">'gulp-less'</span>),</span><br><span class="line">    notify = <span class="built_in">require</span>(<span class="string">'gulp-notify'</span>),</span><br><span class="line">    plumber = <span class="built_in">require</span>(<span class="string">'gulp-plumber'</span>),</span><br><span class="line">    browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>),</span><br><span class="line">    runSequence = <span class="built_in">require</span>(<span class="string">'run-sequence'</span>),</span><br><span class="line">    rev = <span class="built_in">require</span>(<span class="string">'gulp-rev'</span>),</span><br><span class="line">    revCollector = <span class="built_in">require</span>(<span class="string">'gulp-rev-collector'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义css js 路径</span></span><br><span class="line"><span class="keyword">var</span> cssUrl = <span class="string">'src/css/*.css'</span>,</span><br><span class="line">    jsUrl = <span class="string">'src/js/*.js'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// hello 任务</span></span><br><span class="line">gulp.task(<span class="string">'hello'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hello World!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//less 任务</span></span><br><span class="line">gulp.task(<span class="string">'less'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'src/css/less/app.less'</span>)</span><br><span class="line">        .pipe(plumber(&#123; <span class="attr">errorHandler</span>: notify.onError(<span class="string">'Error: &lt;%= error.message %&gt;'</span>) &#125;))</span><br><span class="line">        .pipe(less())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'src/css'</span>))</span><br><span class="line">        .pipe(browserSync.reload(&#123;</span><br><span class="line">            stream: <span class="literal">true</span></span><br><span class="line">        &#125;))</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听任务</span></span><br><span class="line">gulp.task(<span class="string">'watch'</span>, [<span class="string">'browserSync'</span>, <span class="string">'less'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    gulp.watch(<span class="string">'src/css/less/*.less'</span>,[<span class="string">'less'</span>]);</span><br><span class="line">    gulp.watch(<span class="string">'src/css/app.css'</span>,[<span class="string">'dev'</span>]);</span><br><span class="line">    gulp.watch(<span class="string">'src/js/*.js'</span>,[<span class="string">'dev'</span>]);</span><br><span class="line">    gulp.watch(<span class="string">'src/*.html'</span>,browserSync.reload);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Browser-sync task, only cares about compiled CSS</span></span><br><span class="line">gulp.task(<span class="string">'browserSync'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    browserSync(&#123;</span><br><span class="line">        proxy: <span class="string">"http://127.0.0.1/XXX/src/#/"</span> <span class="comment">//根据实际情况写</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//CSS生成文件hash编码并生成 rev-manifest.json文件名对照映射</span></span><br><span class="line">gulp.task(<span class="string">'revCss'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(cssUrl)</span><br><span class="line">        .pipe(rev())</span><br><span class="line">        .pipe(rev.manifest())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'rev/css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//js生成文件hash编码并生成 rev-manifest.json文件名对照映射</span></span><br><span class="line">gulp.task(<span class="string">'revJs'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(jsUrl)</span><br><span class="line">        .pipe(rev())</span><br><span class="line">        .pipe(rev.manifest())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'rev/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Html更换css、js文件版本</span></span><br><span class="line">gulp.task(<span class="string">'revHtml'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'rev/**/*.json'</span>, <span class="string">'src/*.html'</span>]) <span class="comment">/*WEB-INF/views是本地html文件的路径，可自行配置*/</span></span><br><span class="line">        .pipe(revCollector())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'src/'</span>)); <span class="comment">/*Html更换css、js文件版本,WEB-INF/views也是和本地html文件的路径一致*/</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开发构建</span></span><br><span class="line">gulp.task(<span class="string">'dev'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">done</span>) </span>&#123;</span><br><span class="line">    condition = <span class="literal">false</span>;</span><br><span class="line">    runSequence(</span><br><span class="line">        [<span class="string">'revCss'</span>], [<span class="string">'revJs'</span>], [<span class="string">'revHtml'</span>],</span><br><span class="line">        done);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//gulp.task('default', ['dev']);</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用gulp一段时间了，编译less省时省力，记录一下自己的安装过程，也算是比较详细的gulp使用教程了。&lt;br&gt;
    
    </summary>
    
    
      <category term="gulp" scheme="https://liuchao0704.github.io/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>JS Date对象学习</title>
    <link href="https://liuchao0704.github.io/2017/02/08/date/"/>
    <id>https://liuchao0704.github.io/2017/02/08/date/</id>
    <published>2017-02-08T13:40:44.000Z</published>
    <updated>2018-01-06T11:18:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>关于 Date 对象处理方法<br><a id="more"></a></p><h3 id="利用Date-构造函数可以创建指定时间日期对象，例如"><a href="#利用Date-构造函数可以创建指定时间日期对象，例如" class="headerlink" title="利用Date()构造函数可以创建指定时间日期对象，例如:"></a>利用Date()构造函数可以创建指定时间日期对象，例如:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> theDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">console</span>.log(theDate);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'今年：'</span> + theDate.getFullYear() + <span class="string">'\n'</span>) <span class="comment">// 获取年份</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'今月：'</span> + (<span class="built_in">parseInt</span>(theDate.getMonth())+<span class="number">1</span>) + <span class="string">'\n'</span>) <span class="comment">// 获取月  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'今日：'</span> + theDate.getDate() + <span class="string">'\n'</span>) <span class="comment">// 获取日</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'星期：'</span> + theDate.getDay() + <span class="string">'\n'</span>) <span class="comment">// 获取星期</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'小时：'</span> + theDate.getHours() + <span class="string">'\n'</span>) <span class="comment">// 获取小时</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'分钟：'</span> + theDate.getMinutes() + <span class="string">'\n'</span>) <span class="comment">// 获取分钟：</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'秒:'</span> + theDate.getSeconds()+ <span class="string">'\n'</span>) <span class="comment">// 获取秒</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'毫秒:'</span> + theDate.getMilliseconds() + <span class="string">'\n'</span>) <span class="comment">// 获取毫秒</span></span><br></pre></td></tr></table></figure><p>上面是对于Date()构造函数最简单的应用了，Date对象具有多种构造函数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(milliseconds)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(datestring)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(year, month)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(year, month, day)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(year, month, day, hours)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(year, month, day, hours, minutes)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(year, month, day, hours, minutes, seconds)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(year, month, day, hours, minutes, seconds, microseconds)</span><br></pre></td></tr></table></figure></p><h3 id="new-Date"><a href="#new-Date" class="headerlink" title="new Date()"></a>new Date()</h3><p>当 new Date()构造函数而不传递参数的时候，新创建的对象自动获得当前时间。以下代方便获取Date对象时间戳</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> start = +<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"> <span class="comment">// do something</span></span><br><span class="line"><span class="keyword">var</span> stop = +<span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    result = stop - start;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对于支持 Date.now()的浏览器</span></span><br><span class="line"><span class="keyword">var</span> start = <span class="built_in">Date</span>.now();</span><br><span class="line"> <span class="comment">//do something</span></span><br><span class="line"><span class="keyword">var</span> stop = <span class="built_in">Date</span>.now(),</span><br><span class="line">     result = stop- start;</span><br></pre></td></tr></table></figure><h3 id="Date-parse"><a href="#Date-parse" class="headerlink" title="Date.parse()"></a>Date.parse()</h3><p>如果想要获取指定日期或者时间的日期对象，可以通过Date.parse()或者Date.UTC()。Date.parse()接收一个表示日期的字符串参数，然后根据这个字符串参数返回相应日期的毫秒数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> someDate = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.parse(<span class="string">'May 25,2004'</span>));</span><br><span class="line"><span class="comment">//等同于</span></span><br><span class="line"><span class="keyword">var</span> someDate = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'May 25,2004'</span>)</span><br></pre></td></tr></table></figure><h3 id="Date-UTC"><a href="#Date-UTC" class="headerlink" title="Date.UTC()"></a>Date.UTC()</h3><p>Date.UTC() 方法同样也会返回表示日期的毫秒数，但它与Date.parse()在构建值时使用不同的信息。Date.UTC() 的参数分别是年份，基于0的月份(1月是0，2月是1)、月中的哪一天、小时数、分钟、秒、以及毫秒数。在这些参数中，只有前两个参数是必须的。其他可以忽略。其中月中的天数默认为1号，其他为0。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> y = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.UTC(<span class="number">2000</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure><h3 id="简单总结下"><a href="#简单总结下" class="headerlink" title="简单总结下"></a>简单总结下</h3><ol><li>new Date()，没有参数的时候，创建的是 <strong>当前</strong> 时间日期对象。</li><li>new Date(milliseconds)，当参数为数字的时候，那么这个参数就是时间戳，被视为毫秒，创建一个距离1970年1月一日指定毫秒的时间日期对象。</li><li>new Date(datestring)，此参数是一个字符串，并且此字符串一定能够使用Date.parse()转换。</li><li>以下六个构造函数是精确定义:<ul><li>year，是一个整数，如果是0-99，那么在此基础上加1900，其他的都原样返回。</li><li>month,是一个整数，范围是0-11。</li><li>day，是一个整数，范围是1-31。</li><li>hours，是一个整数，范围是0-23。</li><li>minutes，是一个整数，范围是0-59。</li><li>seconds，是一个整数，范围是0-59.</li><li>microseconds，是一个整数，范围是0-9999。</li><li><h3 id="一些常用扩展"><a href="#一些常用扩展" class="headerlink" title="一些常用扩展"></a>一些常用扩展</h3></li></ul></li></ol><p>将日期变成指定格式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">Date</span>.prototype.format = <span class="function"><span class="keyword">function</span> (<span class="params">fmt</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> o = &#123;</span><br><span class="line">            <span class="string">"M+"</span>: <span class="keyword">this</span>.getMonth() + <span class="number">1</span>,                 <span class="comment">//月份</span></span><br><span class="line">            <span class="string">"d+"</span>: <span class="keyword">this</span>.getDate(),                    <span class="comment">//日</span></span><br><span class="line">            <span class="string">"h+"</span>: <span class="keyword">this</span>.getHours(),                   <span class="comment">//小时</span></span><br><span class="line">            <span class="string">"m+"</span>: <span class="keyword">this</span>.getMinutes(),                 <span class="comment">//分</span></span><br><span class="line">            <span class="string">"s+"</span>: <span class="keyword">this</span>.getSeconds(),                 <span class="comment">//秒</span></span><br><span class="line">            <span class="string">"q+"</span>: <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>), <span class="comment">//季度</span></span><br><span class="line">            <span class="string">"S"</span>: <span class="keyword">this</span>.getMilliseconds()             <span class="comment">//毫秒</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt)) &#123;</span><br><span class="line">            fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear() + <span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span> + k + <span class="string">")"</span>).test(fmt)) &#123;</span><br><span class="line">                fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length == <span class="number">1</span>) ? (o[k]) : ((<span class="string">"00"</span> + o[k]).substr((<span class="string">""</span> + o[k]).length)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fmt;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">var</span> NewDate = <span class="keyword">new</span> <span class="built_in">Date</span>().format(<span class="string">'yyyy-MM-dd'</span>)将输出指定格式的今日日期</span><br></pre></td></tr></table></figure></p><p>将指定格式的日期变成时间戳<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">convertTimes</span>(<span class="params"> date </span>)</span>&#123;  </span><br><span class="line">    <span class="keyword">var</span> date = date.split(<span class="string">'-'</span>); </span><br><span class="line">    d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    d.setFullYear(date[<span class="number">0</span>]);</span><br><span class="line">    d.setMonth(date[<span class="number">1</span>]<span class="number">-1</span>); </span><br><span class="line">    d.setDate(date[<span class="number">2</span>]); </span><br><span class="line">    <span class="keyword">return</span> d.getTime();</span><br><span class="line">&#125;  </span><br><span class="line"><span class="built_in">console</span>.log( convertTimes(<span class="string">'2017-2-3'</span>));</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于 Date 对象处理方法&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://liuchao0704.github.io/tags/js/"/>
    
      <category term="date" scheme="https://liuchao0704.github.io/tags/date/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github 部署个人网站</title>
    <link href="https://liuchao0704.github.io/2017/01/31/hexo-github/"/>
    <id>https://liuchao0704.github.io/2017/01/31/hexo-github/</id>
    <published>2017-01-31T11:54:21.000Z</published>
    <updated>2017-12-30T06:06:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果你对个人博客感兴趣想拥有一个属于自己的网站，对markdown语法有了解，有自己的github账号，平时习惯用markdown记笔记。那么用hexo来打造自己的个人网站就很容易上手了。</p><a id="more"></a><h2 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h2><ol><li>安装并配置hexo</li><li>github新建仓库并上传</li><li>注册七牛云用图床软件保存图片(如果需要的话)</li></ol><h2 id="安装并配置hexo"><a href="#安装并配置hexo" class="headerlink" title="安装并配置hexo"></a>安装并配置hexo</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>   在电脑E盘下直接新建一个blog目录（windows系统下文件夹命名避免出现中文）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /e/blog/</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></p><h3 id="查看一下E-blog-生成的目录"><a href="#查看一下E-blog-生成的目录" class="headerlink" title="查看一下E/blog 生成的目录"></a>查看一下E/blog 生成的目录</h3><p><img src="http://okn6xxp76.bkt.clouddn.com/hexo/hexo-init.png" alt="mark"></p><h3 id="生成并启动hexo"><a href="#生成并启动hexo" class="headerlink" title="生成并启动hexo"></a>生成并启动hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure><p>  <code>$ hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考百度。如果顺利打开的话页面是这样子的<br><img src="http://okn6xxp76.bkt.clouddn.com/hexo/hexo-theme.jpg" alt="mark"></p><h3 id="不喜欢这个主题？-没有关系随时都可以修改"><a href="#不喜欢这个主题？-没有关系随时都可以修改" class="headerlink" title="不喜欢这个主题？ 没有关系随时都可以修改"></a>不喜欢这个主题？ 没有关系随时都可以修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /e/blog/</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>   下载后的主题都在themes文件夹下面。点击进去就可以看到yilia文件夹。<br>   找到blog目录下的<code>_config.yml</code>文件打开并修改<code>theme: yilia</code><br>   执行一下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></p><p>   记住如果修改了根目录下的<code>_config.yml</code> 都要重新<code>$ hexo s</code> 才能看到效果</p><h3 id="修改主题里面的参数"><a href="#修改主题里面的参数" class="headerlink" title="修改主题里面的参数"></a>修改主题里面的参数</h3><p>   找到themes/yilia文件下的<code>_config.yml</code> 照着备注的中文名称开始修改吧。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Header</span></span><br><span class="line">author: 你独一无二的昵称</span><br><span class="line">menu:</span><br><span class="line">  主页: /</span><br><span class="line">  所有文章: /archives</span><br><span class="line"><span class="comment"># SubNav</span></span><br><span class="line">subnav:</span><br><span class="line">  github: <span class="string">"https://github.com/你自己的github账号"</span></span><br><span class="line">  rss: <span class="string">"#"</span></span><br><span class="line">  zhihu: <span class="string">"#"</span></span><br><span class="line">  <span class="comment">#qq: "#"</span></span><br><span class="line">  <span class="comment">#weixin: "#"</span></span><br><span class="line">  <span class="comment">#jianshu: "#"</span></span><br><span class="line">  <span class="comment">#douban: "#"</span></span><br><span class="line">  <span class="comment">#mail: "mailto:litten225@qq.com"</span></span><br><span class="line">  <span class="comment">#facebook: "#"</span></span><br><span class="line">  <span class="comment">#google: "#"</span></span><br><span class="line">  <span class="comment">#twitter: "#"</span></span><br><span class="line">  <span class="comment">#linkedin: "#"</span></span><br><span class="line"></span><br><span class="line">rss: /atom.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否需要修改 root 路径</span></span><br><span class="line"><span class="comment"># 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，</span></span><br><span class="line"><span class="comment"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span></span><br><span class="line">root: </span><br><span class="line"></span><br><span class="line"><span class="comment"># Content</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章太长，截断按钮文字</span></span><br><span class="line">excerpt_link: more</span><br><span class="line"><span class="comment"># 文章卡片右下角常驻链接，不需要请设置为false</span></span><br><span class="line">show_all_link: <span class="string">'展开全文'</span></span><br><span class="line"><span class="comment"># 数学公式</span></span><br><span class="line">mathjax: <span class="literal">false</span></span><br><span class="line"><span class="comment"># 是否在新窗口打开链接</span></span><br><span class="line">open_in_new: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打赏</span></span><br><span class="line"><span class="comment"># 请在需要打赏的文章的md文件头部，设置属性reward: true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打赏基础设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class="line">reward_type: 0</span><br><span class="line"><span class="comment"># 打赏wording</span></span><br><span class="line">reward_wording: <span class="string">'谢谢你请我吃糖果'</span></span><br><span class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></span><br><span class="line">alipay: </span><br><span class="line"><span class="comment"># 微信二维码图片地址</span></span><br><span class="line">weixin: </span><br><span class="line"></span><br><span class="line"><span class="comment"># Miscellaneous</span></span><br><span class="line">baidu_analytics: <span class="string">''</span></span><br><span class="line">google_analytics: <span class="string">''</span></span><br><span class="line">favicon: /favicon.png</span><br><span class="line"></span><br><span class="line"><span class="comment">#你的头像url</span></span><br><span class="line">avatar: <span class="string">'http://okn6xxp76.bkt.clouddn.com//*******.png'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否开启分享</span></span><br><span class="line">share_jia: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否开启多说评论，填写你在多说申请的项目名称 duoshuo: duoshuo-key</span></span><br><span class="line"><span class="comment">#若使用disqus，请在博客config文件中填写disqus_shortname，并关闭多说评论</span></span><br><span class="line">duoshuo: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span></span><br><span class="line">style:</span><br><span class="line">  <span class="comment"># 头像上面的背景颜色</span></span><br><span class="line">  header: <span class="string">'#0c0d25'</span></span><br><span class="line">  <span class="comment"># 右滑板块背景</span></span><br><span class="line">  slider: <span class="string">'linear-gradient(200deg,#a0cfe4,#e8c37e)'</span> </span><br><span class="line">  <span class="comment"># </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># slider的设置</span></span><br><span class="line">slider:</span><br><span class="line">  <span class="comment"># 是否默认展开tags板块</span></span><br><span class="line">  showTags: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 智能菜单</span></span><br><span class="line"><span class="comment"># 如不需要，将该对应项置为false</span></span><br><span class="line"><span class="comment"># 比如</span></span><br><span class="line"><span class="comment">#smart_menu:</span></span><br><span class="line"><span class="comment">#  friends: false</span></span><br><span class="line">smart_menu:</span><br><span class="line">  innerArchive: <span class="string">'所有文章'</span></span><br><span class="line">  friends: <span class="string">'友链'</span></span><br><span class="line">  aboutme: <span class="string">'关于我'</span></span><br><span class="line"></span><br><span class="line">friends:</span><br><span class="line">  友情链接1: http://localhost:4000/</span><br><span class="line">  友情链接2: http://localhost:4000/</span><br><span class="line">  友情链接3: http://localhost:4000/</span><br><span class="line">  友情链接4: http://localhost:4000/</span><br><span class="line">  友情链接5: http://localhost:4000/</span><br><span class="line">  友情链接6: http://localhost:4000/</span><br><span class="line"></span><br><span class="line">aboutme: 很高兴&lt;br&gt;你能来到这里&lt;br&gt;谢谢大家</span><br></pre></td></tr></table></figure><p>   关于头像设置（尺寸118*118 大小10-20Kb即可）我的头像是用七牛云存放。参考链接：<a href="http://www.jianshu.com/p/6dce6094b" target="_blank" rel="noopener">http://www.jianshu.com/p/6dce6094b</a> <a href="http://mpic.lzhaofu.cn" target="_blank" rel="noopener">http://mpic.lzhaofu.cn</a><br>   操作比较简单，如果不想设置头像的可以略过。</p><h3 id="动手写一篇博客试试吧"><a href="#动手写一篇博客试试吧" class="headerlink" title="动手写一篇博客试试吧"></a>动手写一篇博客试试吧</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /e/blog/  <span class="comment"># 切换到blog文件</span></span><br><span class="line">$ hexo new <span class="string">'hello'</span></span><br></pre></td></tr></table></figure><p>  回到blog/source/_posts/找到 hello.md 打开支持md语法的编辑器就可以愉快的编写了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: 鸡年大吉</span><br><span class="line">date: 2017-01-30 20:18:00</span><br><span class="line">tags: 随笔</span><br><span class="line">---</span><br><span class="line">预览内容</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">正文部分开始</span><br></pre></td></tr></table></figure><h2 id="github新建仓库并设置"><a href="#github新建仓库并设置" class="headerlink" title="github新建仓库并设置"></a>github新建仓库并设置</h2><h3 id="登录github-并新建一个仓库"><a href="#登录github-并新建一个仓库" class="headerlink" title="登录github 并新建一个仓库"></a>登录github 并新建一个仓库</h3><p>   请注意用户名和仓库名一一对应必须一模一样<br><img src="http://okn6xxp76.bkt.clouddn.com/hexo/hexo-git.png" alt="mark"></p><h3 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/. ssh <span class="comment">#检查本机已存在的ssh密钥</span></span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"邮件地址"</span></span><br></pre></td></tr></table></figure></p><p>代码参数含义：<br>-t 指定密钥类型，默认是 rsa ，可以省略。<br>-C 设置注释文字，比如邮箱。<br>-f 指定密钥文件存储文件名。</p><p>以上代码省略了 -f 参数，因此，运行上面那条命令后会让你输入一个文件名，用于保存刚才生成的 SSH key 代码，如<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line"><span class="comment"># Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]</span></span><br></pre></td></tr></table></figure></p><p>当然，你也可以不输入文件名，使用默认文件名（推荐），那么就会生成 id_rsa 和 id_rsa.pub 两个秘钥文件。接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），当然，你也可以不输入密码，直接按回车。那么push的时候就不需要输入密码，直接提交到github上了，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passhrase(empty fo no passphrase):</span><br><span class="line"><span class="comment"># Enter same passphrase again:</span></span><br></pre></td></tr></table></figure></p><p>最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/you/.ssh/id_rsa.</span><br><span class="line"><span class="comment"># Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.</span></span><br><span class="line"><span class="comment"># The key fingerprint is:</span></span><br><span class="line"><span class="comment"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span></span><br></pre></td></tr></table></figure></p><p>当你看到上面这段代码,那就说明你的 SSH key 已经创建成功，你只需要添加到github的SSH key上就可以了。</p><h3 id="添加你的-SSH-key-到-github上面去"><a href="#添加你的-SSH-key-到-github上面去" class="headerlink" title="添加你的 SSH key 到 github上面去"></a>添加你的 SSH key 到 github上面去</h3><p>首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制，也可以用git命令复制该文件的内容，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>登录你的github账号，点击头像（  Settings ）进入 &gt; SSH and GPG keys -&gt; New SSH key 把你本地生成的密钥复制到里面（key文本框中）title随便填。保存就ok了。</p><h3 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com <span class="comment"># 注意邮箱地址不用改</span></span><br></pre></td></tr></table></figure><p>如果提示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Are you sure you want to <span class="built_in">continue</span> connecting (yes/no)?</span><br></pre></td></tr></table></figure></p><p>输入yes，然后会看到：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi XXXX! Youve successfullu authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></p><p>看到这个信息说明SSH已配置成功！此时你还需要配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"你的名字"</span>// 你的github用户名，非昵称</span><br><span class="line">$ git config --global user.email  <span class="string">"xxx@xx.com"</span>// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><h3 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h3><p>在window 系统下操作git 总会出现一些问题。如果你遇到这个提示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not open a connection to your authentication agent.</span><br></pre></td></tr></table></figure></p><p>尝试解决的方案<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">islue@localhost $ ssh-agent bash --login -i</span><br><span class="line">islue@localhost $ ssh-add</span><br></pre></td></tr></table></figure></p><p>参考资料：<a href="http://www.cnblogs.com/cheche/archive/2011/01/07/1918825.html" target="_blank" rel="noopener">http://www.cnblogs.com/cheche/archive/2011/01/07/1918825.html</a></p><h2 id="本地上传到github"><a href="#本地上传到github" class="headerlink" title="本地上传到github"></a>本地上传到github</h2><p>如果你一切都配置好了，发布上传很容易，一句<code>hexo d</code>就搞定，当然关键还是你要把所有东西配置好。首先，ssh key肯定要配置好。其次，配置_config.yml中有关deploy的部分：<br>正确写法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:你的名字/你的名字.github.io.git </span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>安装一下插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>最后一步也就是重复之前的操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p><p>成功之后打开 <a href="https://liuchao0704.github.io/">https://liuchao0704.github.io/</a> 即可预览</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这也是自己第一次摸索了大半天做出来的效果，遇到了一些坑。不过上网发现很多人有用hexo搭建自己的博客，资料很丰富。遇到问题也能及时百度解决之。最后时间关系有些功能没有添加：比如评论留言，比如主题里面 一些个性化配置。有机会一定会抽空改进。</p><p>我参考的资料：<br><a href="http://hetaoo.iteye.com/blog/2323944" target="_blank" rel="noopener">http://hetaoo.iteye.com/blog/2323944</a><br><a href="http://blog.csdn.net/jzooo/article/details/46781805" target="_blank" rel="noopener">http://blog.csdn.net/jzooo/article/details/46781805</a><br><a href="http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你对个人博客感兴趣想拥有一个属于自己的网站，对markdown语法有了解，有自己的github账号，平时习惯用markdown记笔记。那么用hexo来打造自己的个人网站就很容易上手了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://liuchao0704.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
